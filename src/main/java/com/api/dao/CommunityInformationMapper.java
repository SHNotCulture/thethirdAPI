package com.api.dao;

import com.api.dao.sqlProvider.CommunityInformationSqlProvider;
import com.api.entity.CommunityInformation;
import com.api.entity.CommunityInformationCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface CommunityInformationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @SelectProvider(type=CommunityInformationSqlProvider.class, method="countByExample")
    long countByExample(CommunityInformationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @DeleteProvider(type=CommunityInformationSqlProvider.class, method="deleteByExample")
    int deleteByExample(CommunityInformationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @Delete({
        "delete from community_information",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @Insert({
        "insert into community_information (ID, Community_ID, ",
        "Area_ID, Community_Name, ",
        "CreateTime)",
        "values (#{id,jdbcType=INTEGER}, #{communityId,jdbcType=VARCHAR}, ",
        "#{areaId,jdbcType=INTEGER}, #{communityName,jdbcType=VARCHAR}, ",
        "#{createtime,jdbcType=TIMESTAMP})"
    })
    int insert(CommunityInformation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @InsertProvider(type=CommunityInformationSqlProvider.class, method="insertSelective")
    int insertSelective(CommunityInformation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @SelectProvider(type=CommunityInformationSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="Community_ID", property="communityId", jdbcType=JdbcType.VARCHAR),
        @Result(column="Area_ID", property="areaId", jdbcType=JdbcType.INTEGER),
        @Result(column="Community_Name", property="communityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="CreateTime", property="createtime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CommunityInformation> selectByExample(CommunityInformationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "ID, Community_ID, Area_ID, Community_Name, CreateTime",
        "from community_information",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="Community_ID", property="communityId", jdbcType=JdbcType.VARCHAR),
        @Result(column="Area_ID", property="areaId", jdbcType=JdbcType.INTEGER),
        @Result(column="Community_Name", property="communityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="CreateTime", property="createtime", jdbcType=JdbcType.TIMESTAMP)
    })
    CommunityInformation selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CommunityInformationSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CommunityInformation record, @Param("example") CommunityInformationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CommunityInformationSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CommunityInformation record, @Param("example") CommunityInformationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CommunityInformationSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CommunityInformation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table community_information
     *
     * @mbg.generated
     */
    @Update({
        "update community_information",
        "set Community_ID = #{communityId,jdbcType=VARCHAR},",
          "Area_ID = #{areaId,jdbcType=INTEGER},",
          "Community_Name = #{communityName,jdbcType=VARCHAR},",
          "CreateTime = #{createtime,jdbcType=TIMESTAMP}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CommunityInformation record);
}