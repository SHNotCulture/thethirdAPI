package com.api.dao;

import com.api.dao.sqlProvider.TElectronPaymentSqlProvider;
import com.api.entity.TElectronPayment;
import com.api.entity.TElectronPaymentCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface TElectronPaymentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @SelectProvider(type= TElectronPaymentSqlProvider.class, method="countByExample")
    long countByExample(TElectronPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @DeleteProvider(type= TElectronPaymentSqlProvider.class, method="deleteByExample")
    int deleteByExample(TElectronPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_electron_payment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_electron_payment (id, park_id, ",
        "create_date, temp_online_total, ",
        "fix_online_actual_total, temp_qPassPay_Total, ",
        "temp_PrePay_Total, weChat_PrePay_Total, ",
        "alipay_PrePay_Total, third_PrePay_Total, ",
        "monthly_weChat_Total, temp_unionPay_Total, ",
        "temp_card_Total, temp_rights_Total, ",
        "temp_weChat_Total, temp_alipay_Total, ",
        "pay_less_Total, pay_more_Total, ",
        "reconciliation_statement, check_flag)",
        "values (#{id,jdbcType=INTEGER}, #{parkId,jdbcType=INTEGER}, ",
        "#{createDate,jdbcType=VARCHAR}, #{tempOnlineTotal,jdbcType=DOUBLE}, ",
        "#{fixOnlineActualTotal,jdbcType=DOUBLE}, #{tempQpasspayTotal,jdbcType=DOUBLE}, ",
        "#{tempPrepayTotal,jdbcType=DOUBLE}, #{wechatPrepayTotal,jdbcType=DOUBLE}, ",
        "#{alipayPrepayTotal,jdbcType=DOUBLE}, #{thirdPrepayTotal,jdbcType=DOUBLE}, ",
        "#{monthlyWechatTotal,jdbcType=DOUBLE}, #{tempUnionpayTotal,jdbcType=DOUBLE}, ",
        "#{tempCardTotal,jdbcType=DOUBLE}, #{tempRightsTotal,jdbcType=DOUBLE}, ",
        "#{tempWechatTotal,jdbcType=DOUBLE}, #{tempAlipayTotal,jdbcType=DOUBLE}, ",
        "#{payLessTotal,jdbcType=DOUBLE}, #{payMoreTotal,jdbcType=DOUBLE}, ",
        "#{reconciliationStatement,jdbcType=VARCHAR}, #{checkFlag,jdbcType=INTEGER})"
    })
    int insert(TElectronPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @InsertProvider(type= TElectronPaymentSqlProvider.class, method="insertSelective")
    int insertSelective(TElectronPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @SelectProvider(type= TElectronPaymentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp_online_total", property="tempOnlineTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_online_actual_total", property="fixOnlineActualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_qPassPay_Total", property="tempQpasspayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_PrePay_Total", property="tempPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="weChat_PrePay_Total", property="wechatPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="alipay_PrePay_Total", property="alipayPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="third_PrePay_Total", property="thirdPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="monthly_weChat_Total", property="monthlyWechatTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_unionPay_Total", property="tempUnionpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_card_Total", property="tempCardTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_rights_Total", property="tempRightsTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_weChat_Total", property="tempWechatTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_alipay_Total", property="tempAlipayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_less_Total", property="payLessTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_more_Total", property="payMoreTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="reconciliation_statement", property="reconciliationStatement", jdbcType=JdbcType.VARCHAR),
        @Result(column="check_flag", property="checkFlag", jdbcType=JdbcType.INTEGER)
    })
    List<TElectronPayment> selectByExample(TElectronPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, park_id, create_date, temp_online_total, fix_online_actual_total, temp_qPassPay_Total, ",
        "temp_PrePay_Total, weChat_PrePay_Total, alipay_PrePay_Total, third_PrePay_Total, ",
        "monthly_weChat_Total, temp_unionPay_Total, temp_card_Total, temp_rights_Total, ",
        "temp_weChat_Total, temp_alipay_Total, pay_less_Total, pay_more_Total, reconciliation_statement, ",
        "check_flag",
        "from t_electron_payment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp_online_total", property="tempOnlineTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_online_actual_total", property="fixOnlineActualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_qPassPay_Total", property="tempQpasspayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_PrePay_Total", property="tempPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="weChat_PrePay_Total", property="wechatPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="alipay_PrePay_Total", property="alipayPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="third_PrePay_Total", property="thirdPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="monthly_weChat_Total", property="monthlyWechatTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_unionPay_Total", property="tempUnionpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_card_Total", property="tempCardTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_rights_Total", property="tempRightsTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_weChat_Total", property="tempWechatTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_alipay_Total", property="tempAlipayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_less_Total", property="payLessTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_more_Total", property="payMoreTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="reconciliation_statement", property="reconciliationStatement", jdbcType=JdbcType.VARCHAR),
        @Result(column="check_flag", property="checkFlag", jdbcType=JdbcType.INTEGER)
    })
    TElectronPayment selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TElectronPaymentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TElectronPayment record, @Param("example") TElectronPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TElectronPaymentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TElectronPayment record, @Param("example") TElectronPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TElectronPaymentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TElectronPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    @Update({
        "update t_electron_payment",
        "set park_id = #{parkId,jdbcType=INTEGER},",
          "create_date = #{createDate,jdbcType=VARCHAR},",
          "temp_online_total = #{tempOnlineTotal,jdbcType=DOUBLE},",
          "fix_online_actual_total = #{fixOnlineActualTotal,jdbcType=DOUBLE},",
          "temp_qPassPay_Total = #{tempQpasspayTotal,jdbcType=DOUBLE},",
          "temp_PrePay_Total = #{tempPrepayTotal,jdbcType=DOUBLE},",
          "weChat_PrePay_Total = #{wechatPrepayTotal,jdbcType=DOUBLE},",
          "alipay_PrePay_Total = #{alipayPrepayTotal,jdbcType=DOUBLE},",
          "third_PrePay_Total = #{thirdPrepayTotal,jdbcType=DOUBLE},",
          "monthly_weChat_Total = #{monthlyWechatTotal,jdbcType=DOUBLE},",
          "temp_unionPay_Total = #{tempUnionpayTotal,jdbcType=DOUBLE},",
          "temp_card_Total = #{tempCardTotal,jdbcType=DOUBLE},",
          "temp_rights_Total = #{tempRightsTotal,jdbcType=DOUBLE},",
          "temp_weChat_Total = #{tempWechatTotal,jdbcType=DOUBLE},",
          "temp_alipay_Total = #{tempAlipayTotal,jdbcType=DOUBLE},",
          "pay_less_Total = #{payLessTotal,jdbcType=DOUBLE},",
          "pay_more_Total = #{payMoreTotal,jdbcType=DOUBLE},",
          "reconciliation_statement = #{reconciliationStatement,jdbcType=VARCHAR},",
          "check_flag = #{checkFlag,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TElectronPayment record);
}