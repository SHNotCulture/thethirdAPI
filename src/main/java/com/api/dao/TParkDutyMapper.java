package com.api.dao;

import com.api.dao.sqlProvider.TParkDutySqlProvider;
import com.api.entity.TParkDuty;
import com.api.entity.TParkDutyCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface TParkDutyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @SelectProvider(type=TParkDutySqlProvider.class, method="countByExample")
    long countByExample(TParkDutyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TParkDutySqlProvider.class, method="deleteByExample")
    int deleteByExample(TParkDutyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_park_duty",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_park_duty (id, actual_total, ",
        "begin_time, duty_person, ",
        "end_time, free_pass, ",
        "last_charge_time, manual_pass, ",
        "match_pass, need_total, ",
        "pay_online_total, sys_pass, ",
        "company_id, park_id, ",
        "prepay_total, qpasspay_total, ",
        "behalfpay_total, noconfirm_pass, ",
        "user_id, localcoupon_total, ",
        "updatecarplates_total)",
        "values (#{id,jdbcType=INTEGER}, #{actualTotal,jdbcType=DOUBLE}, ",
        "#{beginTime,jdbcType=VARCHAR}, #{dutyPerson,jdbcType=VARCHAR}, ",
        "#{endTime,jdbcType=VARCHAR}, #{freePass,jdbcType=INTEGER}, ",
        "#{lastChargeTime,jdbcType=VARCHAR}, #{manualPass,jdbcType=INTEGER}, ",
        "#{matchPass,jdbcType=INTEGER}, #{needTotal,jdbcType=DOUBLE}, ",
        "#{payOnlineTotal,jdbcType=DOUBLE}, #{sysPass,jdbcType=INTEGER}, ",
        "#{companyId,jdbcType=INTEGER}, #{parkId,jdbcType=INTEGER}, ",
        "#{prepayTotal,jdbcType=DOUBLE}, #{qpasspayTotal,jdbcType=DOUBLE}, ",
        "#{behalfpayTotal,jdbcType=DOUBLE}, #{noconfirmPass,jdbcType=INTEGER}, ",
        "#{userId,jdbcType=VARCHAR}, #{localcouponTotal,jdbcType=DOUBLE}, ",
        "#{updatecarplatesTotal,jdbcType=INTEGER})"
    })
    int insert(TParkDuty record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @InsertProvider(type=TParkDutySqlProvider.class, method="insertSelective")
    int insertSelective(TParkDuty record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @SelectProvider(type=TParkDutySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="actual_total", property="actualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="begin_time", property="beginTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="duty_person", property="dutyPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="free_pass", property="freePass", jdbcType=JdbcType.INTEGER),
        @Result(column="last_charge_time", property="lastChargeTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="manual_pass", property="manualPass", jdbcType=JdbcType.INTEGER),
        @Result(column="match_pass", property="matchPass", jdbcType=JdbcType.INTEGER),
        @Result(column="need_total", property="needTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_online_total", property="payOnlineTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="sys_pass", property="sysPass", jdbcType=JdbcType.INTEGER),
        @Result(column="company_id", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="prepay_total", property="prepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="qpasspay_total", property="qpasspayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="behalfpay_total", property="behalfpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="noconfirm_pass", property="noconfirmPass", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="localcoupon_total", property="localcouponTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="updatecarplates_total", property="updatecarplatesTotal", jdbcType=JdbcType.INTEGER)
    })
    List<TParkDuty> selectByExample(TParkDutyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, actual_total, begin_time, duty_person, end_time, free_pass, last_charge_time, ",
        "manual_pass, match_pass, need_total, pay_online_total, sys_pass, company_id, ",
        "park_id, prepay_total, qpasspay_total, behalfpay_total, noconfirm_pass, user_id, ",
        "localcoupon_total, updatecarplates_total",
        "from t_park_duty",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="actual_total", property="actualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="begin_time", property="beginTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="duty_person", property="dutyPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="free_pass", property="freePass", jdbcType=JdbcType.INTEGER),
        @Result(column="last_charge_time", property="lastChargeTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="manual_pass", property="manualPass", jdbcType=JdbcType.INTEGER),
        @Result(column="match_pass", property="matchPass", jdbcType=JdbcType.INTEGER),
        @Result(column="need_total", property="needTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_online_total", property="payOnlineTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="sys_pass", property="sysPass", jdbcType=JdbcType.INTEGER),
        @Result(column="company_id", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="prepay_total", property="prepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="qpasspay_total", property="qpasspayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="behalfpay_total", property="behalfpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="noconfirm_pass", property="noconfirmPass", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="localcoupon_total", property="localcouponTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="updatecarplates_total", property="updatecarplatesTotal", jdbcType=JdbcType.INTEGER)
    })
    TParkDuty selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkDutySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TParkDuty record, @Param("example") TParkDutyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkDutySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TParkDuty record, @Param("example") TParkDutyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkDutySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TParkDuty record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_duty
     *
     * @mbg.generated
     */
    @Update({
        "update t_park_duty",
        "set actual_total = #{actualTotal,jdbcType=DOUBLE},",
          "begin_time = #{beginTime,jdbcType=VARCHAR},",
          "duty_person = #{dutyPerson,jdbcType=VARCHAR},",
          "end_time = #{endTime,jdbcType=VARCHAR},",
          "free_pass = #{freePass,jdbcType=INTEGER},",
          "last_charge_time = #{lastChargeTime,jdbcType=VARCHAR},",
          "manual_pass = #{manualPass,jdbcType=INTEGER},",
          "match_pass = #{matchPass,jdbcType=INTEGER},",
          "need_total = #{needTotal,jdbcType=DOUBLE},",
          "pay_online_total = #{payOnlineTotal,jdbcType=DOUBLE},",
          "sys_pass = #{sysPass,jdbcType=INTEGER},",
          "company_id = #{companyId,jdbcType=INTEGER},",
          "park_id = #{parkId,jdbcType=INTEGER},",
          "prepay_total = #{prepayTotal,jdbcType=DOUBLE},",
          "qpasspay_total = #{qpasspayTotal,jdbcType=DOUBLE},",
          "behalfpay_total = #{behalfpayTotal,jdbcType=DOUBLE},",
          "noconfirm_pass = #{noconfirmPass,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "localcoupon_total = #{localcouponTotal,jdbcType=DOUBLE},",
          "updatecarplates_total = #{updatecarplatesTotal,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TParkDuty record);
}