package com.api.dao;

import com.api.dao.sqlProvider.TParkReportSqlProvider;
import com.api.entity.TParkReport;
import com.api.entity.TParkReportCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface TParkReportMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @SelectProvider(type= TParkReportSqlProvider.class, method="countByExample")
    long countByExample(TParkReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @DeleteProvider(type= TParkReportSqlProvider.class, method="deleteByExample")
    int deleteByExample(TParkReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_park_report",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_park_report (id, park_id, ",
        "company_id, create_date, ",
        "temp_cash_need_total, temp_cash_actual_total, ",
        "temp_online_need_total, temp_online_total, ",
        "fix_add, fix_cash_need_total, ",
        "fix_cash_actual_total, fix_online_need_total, ",
        "fix_online_actual_total, center_charge_total, ",
        "business_circle_total, free_total, ",
        "temp_NeedPay_Total, temp_BehalfPay_Total, ",
        "temp_qPassPay_Total, temp_PrePay_Total, ",
        "temp_Pay_diff, temp_coupon_Total, ",
        "weChat_PrePay_Total, alipay_PrePay_Total, ",
        "third_PrePay_Total, monthly_weChat_Total, ",
        "temp_unionPay_Total, temp_card_Total, ",
        "temp_rights_Total, temp_weChat_Total, ",
        "temp_alipay_Total, alipay_count, ",
        "behalfpay_count, cashpay_count, ",
        "etcpay_count, localcouponpay_count, ",
        "noconfirm_count, noentry_count, ",
        "prepay_count, qpasspay_count, ",
        "unionpay_count, wechatpay_count, ",
        "update_carplate_count)",
        "values (#{id,jdbcType=INTEGER}, #{parkId,jdbcType=INTEGER}, ",
        "#{companyId,jdbcType=INTEGER}, #{createDate,jdbcType=VARCHAR}, ",
        "#{tempCashNeedTotal,jdbcType=DOUBLE}, #{tempCashActualTotal,jdbcType=DOUBLE}, ",
        "#{tempOnlineNeedTotal,jdbcType=DOUBLE}, #{tempOnlineTotal,jdbcType=DOUBLE}, ",
        "#{fixAdd,jdbcType=INTEGER}, #{fixCashNeedTotal,jdbcType=DOUBLE}, ",
        "#{fixCashActualTotal,jdbcType=DOUBLE}, #{fixOnlineNeedTotal,jdbcType=DOUBLE}, ",
        "#{fixOnlineActualTotal,jdbcType=DOUBLE}, #{centerChargeTotal,jdbcType=DOUBLE}, ",
        "#{businessCircleTotal,jdbcType=DOUBLE}, #{freeTotal,jdbcType=INTEGER}, ",
        "#{tempNeedpayTotal,jdbcType=DOUBLE}, #{tempBehalfpayTotal,jdbcType=DOUBLE}, ",
        "#{tempQpasspayTotal,jdbcType=DOUBLE}, #{tempPrepayTotal,jdbcType=DOUBLE}, ",
        "#{tempPayDiff,jdbcType=DOUBLE}, #{tempCouponTotal,jdbcType=DOUBLE}, ",
        "#{wechatPrepayTotal,jdbcType=DOUBLE}, #{alipayPrepayTotal,jdbcType=DOUBLE}, ",
        "#{thirdPrepayTotal,jdbcType=DOUBLE}, #{monthlyWechatTotal,jdbcType=DOUBLE}, ",
        "#{tempUnionpayTotal,jdbcType=DOUBLE}, #{tempCardTotal,jdbcType=DOUBLE}, ",
        "#{tempRightsTotal,jdbcType=DOUBLE}, #{tempWechatTotal,jdbcType=DOUBLE}, ",
        "#{tempAlipayTotal,jdbcType=DOUBLE}, #{alipayCount,jdbcType=INTEGER}, ",
        "#{behalfpayCount,jdbcType=INTEGER}, #{cashpayCount,jdbcType=INTEGER}, ",
        "#{etcpayCount,jdbcType=INTEGER}, #{localcouponpayCount,jdbcType=INTEGER}, ",
        "#{noconfirmCount,jdbcType=INTEGER}, #{noentryCount,jdbcType=INTEGER}, ",
        "#{prepayCount,jdbcType=INTEGER}, #{qpasspayCount,jdbcType=INTEGER}, ",
        "#{unionpayCount,jdbcType=INTEGER}, #{wechatpayCount,jdbcType=INTEGER}, ",
        "#{updateCarplateCount,jdbcType=INTEGER})"
    })
    int insert(TParkReport record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @InsertProvider(type= TParkReportSqlProvider.class, method="insertSelective")
    int insertSelective(TParkReport record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @SelectProvider(type= TParkReportSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="company_id", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp_cash_need_total", property="tempCashNeedTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_cash_actual_total", property="tempCashActualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_online_need_total", property="tempOnlineNeedTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_online_total", property="tempOnlineTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_add", property="fixAdd", jdbcType=JdbcType.INTEGER),
        @Result(column="fix_cash_need_total", property="fixCashNeedTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_cash_actual_total", property="fixCashActualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_online_need_total", property="fixOnlineNeedTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_online_actual_total", property="fixOnlineActualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="center_charge_total", property="centerChargeTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="business_circle_total", property="businessCircleTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="free_total", property="freeTotal", jdbcType=JdbcType.INTEGER),
        @Result(column="temp_NeedPay_Total", property="tempNeedpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_BehalfPay_Total", property="tempBehalfpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_qPassPay_Total", property="tempQpasspayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_PrePay_Total", property="tempPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_Pay_diff", property="tempPayDiff", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_coupon_Total", property="tempCouponTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="weChat_PrePay_Total", property="wechatPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="alipay_PrePay_Total", property="alipayPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="third_PrePay_Total", property="thirdPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="monthly_weChat_Total", property="monthlyWechatTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_unionPay_Total", property="tempUnionpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_card_Total", property="tempCardTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_rights_Total", property="tempRightsTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_weChat_Total", property="tempWechatTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_alipay_Total", property="tempAlipayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="alipay_count", property="alipayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="behalfpay_count", property="behalfpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="cashpay_count", property="cashpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="etcpay_count", property="etcpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="localcouponpay_count", property="localcouponpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="noconfirm_count", property="noconfirmCount", jdbcType=JdbcType.INTEGER),
        @Result(column="noentry_count", property="noentryCount", jdbcType=JdbcType.INTEGER),
        @Result(column="prepay_count", property="prepayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="qpasspay_count", property="qpasspayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="unionpay_count", property="unionpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="wechatpay_count", property="wechatpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="update_carplate_count", property="updateCarplateCount", jdbcType=JdbcType.INTEGER)
    })
    List<TParkReport> selectByExample(TParkReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, park_id, company_id, create_date, temp_cash_need_total, temp_cash_actual_total, ",
        "temp_online_need_total, temp_online_total, fix_add, fix_cash_need_total, fix_cash_actual_total, ",
        "fix_online_need_total, fix_online_actual_total, center_charge_total, business_circle_total, ",
        "free_total, temp_NeedPay_Total, temp_BehalfPay_Total, temp_qPassPay_Total, temp_PrePay_Total, ",
        "temp_Pay_diff, temp_coupon_Total, weChat_PrePay_Total, alipay_PrePay_Total, ",
        "third_PrePay_Total, monthly_weChat_Total, temp_unionPay_Total, temp_card_Total, ",
        "temp_rights_Total, temp_weChat_Total, temp_alipay_Total, alipay_count, behalfpay_count, ",
        "cashpay_count, etcpay_count, localcouponpay_count, noconfirm_count, noentry_count, ",
        "prepay_count, qpasspay_count, unionpay_count, wechatpay_count, update_carplate_count",
        "from t_park_report",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="company_id", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp_cash_need_total", property="tempCashNeedTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_cash_actual_total", property="tempCashActualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_online_need_total", property="tempOnlineNeedTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_online_total", property="tempOnlineTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_add", property="fixAdd", jdbcType=JdbcType.INTEGER),
        @Result(column="fix_cash_need_total", property="fixCashNeedTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_cash_actual_total", property="fixCashActualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_online_need_total", property="fixOnlineNeedTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="fix_online_actual_total", property="fixOnlineActualTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="center_charge_total", property="centerChargeTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="business_circle_total", property="businessCircleTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="free_total", property="freeTotal", jdbcType=JdbcType.INTEGER),
        @Result(column="temp_NeedPay_Total", property="tempNeedpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_BehalfPay_Total", property="tempBehalfpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_qPassPay_Total", property="tempQpasspayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_PrePay_Total", property="tempPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_Pay_diff", property="tempPayDiff", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_coupon_Total", property="tempCouponTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="weChat_PrePay_Total", property="wechatPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="alipay_PrePay_Total", property="alipayPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="third_PrePay_Total", property="thirdPrepayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="monthly_weChat_Total", property="monthlyWechatTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_unionPay_Total", property="tempUnionpayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_card_Total", property="tempCardTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_rights_Total", property="tempRightsTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_weChat_Total", property="tempWechatTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="temp_alipay_Total", property="tempAlipayTotal", jdbcType=JdbcType.DOUBLE),
        @Result(column="alipay_count", property="alipayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="behalfpay_count", property="behalfpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="cashpay_count", property="cashpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="etcpay_count", property="etcpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="localcouponpay_count", property="localcouponpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="noconfirm_count", property="noconfirmCount", jdbcType=JdbcType.INTEGER),
        @Result(column="noentry_count", property="noentryCount", jdbcType=JdbcType.INTEGER),
        @Result(column="prepay_count", property="prepayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="qpasspay_count", property="qpasspayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="unionpay_count", property="unionpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="wechatpay_count", property="wechatpayCount", jdbcType=JdbcType.INTEGER),
        @Result(column="update_carplate_count", property="updateCarplateCount", jdbcType=JdbcType.INTEGER)
    })
    TParkReport selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TParkReportSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TParkReport record, @Param("example") TParkReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TParkReportSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TParkReport record, @Param("example") TParkReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TParkReportSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TParkReport record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    @Update({
        "update t_park_report",
        "set park_id = #{parkId,jdbcType=INTEGER},",
          "company_id = #{companyId,jdbcType=INTEGER},",
          "create_date = #{createDate,jdbcType=VARCHAR},",
          "temp_cash_need_total = #{tempCashNeedTotal,jdbcType=DOUBLE},",
          "temp_cash_actual_total = #{tempCashActualTotal,jdbcType=DOUBLE},",
          "temp_online_need_total = #{tempOnlineNeedTotal,jdbcType=DOUBLE},",
          "temp_online_total = #{tempOnlineTotal,jdbcType=DOUBLE},",
          "fix_add = #{fixAdd,jdbcType=INTEGER},",
          "fix_cash_need_total = #{fixCashNeedTotal,jdbcType=DOUBLE},",
          "fix_cash_actual_total = #{fixCashActualTotal,jdbcType=DOUBLE},",
          "fix_online_need_total = #{fixOnlineNeedTotal,jdbcType=DOUBLE},",
          "fix_online_actual_total = #{fixOnlineActualTotal,jdbcType=DOUBLE},",
          "center_charge_total = #{centerChargeTotal,jdbcType=DOUBLE},",
          "business_circle_total = #{businessCircleTotal,jdbcType=DOUBLE},",
          "free_total = #{freeTotal,jdbcType=INTEGER},",
          "temp_NeedPay_Total = #{tempNeedpayTotal,jdbcType=DOUBLE},",
          "temp_BehalfPay_Total = #{tempBehalfpayTotal,jdbcType=DOUBLE},",
          "temp_qPassPay_Total = #{tempQpasspayTotal,jdbcType=DOUBLE},",
          "temp_PrePay_Total = #{tempPrepayTotal,jdbcType=DOUBLE},",
          "temp_Pay_diff = #{tempPayDiff,jdbcType=DOUBLE},",
          "temp_coupon_Total = #{tempCouponTotal,jdbcType=DOUBLE},",
          "weChat_PrePay_Total = #{wechatPrepayTotal,jdbcType=DOUBLE},",
          "alipay_PrePay_Total = #{alipayPrepayTotal,jdbcType=DOUBLE},",
          "third_PrePay_Total = #{thirdPrepayTotal,jdbcType=DOUBLE},",
          "monthly_weChat_Total = #{monthlyWechatTotal,jdbcType=DOUBLE},",
          "temp_unionPay_Total = #{tempUnionpayTotal,jdbcType=DOUBLE},",
          "temp_card_Total = #{tempCardTotal,jdbcType=DOUBLE},",
          "temp_rights_Total = #{tempRightsTotal,jdbcType=DOUBLE},",
          "temp_weChat_Total = #{tempWechatTotal,jdbcType=DOUBLE},",
          "temp_alipay_Total = #{tempAlipayTotal,jdbcType=DOUBLE},",
          "alipay_count = #{alipayCount,jdbcType=INTEGER},",
          "behalfpay_count = #{behalfpayCount,jdbcType=INTEGER},",
          "cashpay_count = #{cashpayCount,jdbcType=INTEGER},",
          "etcpay_count = #{etcpayCount,jdbcType=INTEGER},",
          "localcouponpay_count = #{localcouponpayCount,jdbcType=INTEGER},",
          "noconfirm_count = #{noconfirmCount,jdbcType=INTEGER},",
          "noentry_count = #{noentryCount,jdbcType=INTEGER},",
          "prepay_count = #{prepayCount,jdbcType=INTEGER},",
          "qpasspay_count = #{qpasspayCount,jdbcType=INTEGER},",
          "unionpay_count = #{unionpayCount,jdbcType=INTEGER},",
          "wechatpay_count = #{wechatpayCount,jdbcType=INTEGER},",
          "update_carplate_count = #{updateCarplateCount,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TParkReport record);
}