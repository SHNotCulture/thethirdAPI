package com.api.dao;

import com.api.dao.sqlProvider.TParkStatisticsDaySqlProvider;
import com.api.entity.TParkStatisticsDay;
import com.api.entity.TParkStatisticsDayCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface TParkStatisticsDayMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @SelectProvider(type= TParkStatisticsDaySqlProvider.class, method="countByExample")
    long countByExample(TParkStatisticsDayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @DeleteProvider(type= TParkStatisticsDaySqlProvider.class, method="deleteByExample")
    int deleteByExample(TParkStatisticsDayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_park_statistics_day",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_park_statistics_day (id, park_id, ",
        "park_name, statistic_time, ",
        "entrance_flow, outbound_flow, ",
        "totalPayFee, totalPayNum, ",
        "unionPayFee, unionPayNum, ",
        "unionPayQRFee, unionPayQRNum, ",
        "unionPayPassFee, unionPayPassNum, ",
        "cloudFee, cloudNum, ",
        "annual_goals, price_ave, ",
        "entrance_flow_ave, outbound_flow_ave, ",
        "turnover_ave, usage_rate, ",
        "update_time)",
        "values (#{id,jdbcType=INTEGER}, #{parkId,jdbcType=INTEGER}, ",
        "#{parkName,jdbcType=VARCHAR}, #{statisticTime,jdbcType=VARCHAR}, ",
        "#{entranceFlow,jdbcType=INTEGER}, #{outboundFlow,jdbcType=INTEGER}, ",
        "#{totalpayfee,jdbcType=DOUBLE}, #{totalpaynum,jdbcType=INTEGER}, ",
        "#{unionpayfee,jdbcType=DOUBLE}, #{unionpaynum,jdbcType=INTEGER}, ",
        "#{unionpayqrfee,jdbcType=DOUBLE}, #{unionpayqrnum,jdbcType=INTEGER}, ",
        "#{unionpaypassfee,jdbcType=DOUBLE}, #{unionpaypassnum,jdbcType=INTEGER}, ",
        "#{cloudfee,jdbcType=DOUBLE}, #{cloudnum,jdbcType=INTEGER}, ",
        "#{annualGoals,jdbcType=INTEGER}, #{priceAve,jdbcType=DOUBLE}, ",
        "#{entranceFlowAve,jdbcType=DOUBLE}, #{outboundFlowAve,jdbcType=DOUBLE}, ",
        "#{turnoverAve,jdbcType=DOUBLE}, #{usageRate,jdbcType=DOUBLE}, ",
        "#{updateTime,jdbcType=VARCHAR})"
    })
    int insert(TParkStatisticsDay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @InsertProvider(type= TParkStatisticsDaySqlProvider.class, method="insertSelective")
    int insertSelective(TParkStatisticsDay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @SelectProvider(type= TParkStatisticsDaySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_name", property="parkName", jdbcType=JdbcType.VARCHAR),
        @Result(column="statistic_time", property="statisticTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="entrance_flow", property="entranceFlow", jdbcType=JdbcType.INTEGER),
        @Result(column="outbound_flow", property="outboundFlow", jdbcType=JdbcType.INTEGER),
        @Result(column="totalPayFee", property="totalpayfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="totalPayNum", property="totalpaynum", jdbcType=JdbcType.INTEGER),
        @Result(column="unionPayFee", property="unionpayfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="unionPayNum", property="unionpaynum", jdbcType=JdbcType.INTEGER),
        @Result(column="unionPayQRFee", property="unionpayqrfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="unionPayQRNum", property="unionpayqrnum", jdbcType=JdbcType.INTEGER),
        @Result(column="unionPayPassFee", property="unionpaypassfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="unionPayPassNum", property="unionpaypassnum", jdbcType=JdbcType.INTEGER),
        @Result(column="cloudFee", property="cloudfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="cloudNum", property="cloudnum", jdbcType=JdbcType.INTEGER),
        @Result(column="annual_goals", property="annualGoals", jdbcType=JdbcType.INTEGER),
        @Result(column="price_ave", property="priceAve", jdbcType=JdbcType.DOUBLE),
        @Result(column="entrance_flow_ave", property="entranceFlowAve", jdbcType=JdbcType.DOUBLE),
        @Result(column="outbound_flow_ave", property="outboundFlowAve", jdbcType=JdbcType.DOUBLE),
        @Result(column="turnover_ave", property="turnoverAve", jdbcType=JdbcType.DOUBLE),
        @Result(column="usage_rate", property="usageRate", jdbcType=JdbcType.DOUBLE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.VARCHAR)
    })
    List<TParkStatisticsDay> selectByExample(TParkStatisticsDayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, park_id, park_name, statistic_time, entrance_flow, outbound_flow, totalPayFee, ",
        "totalPayNum, unionPayFee, unionPayNum, unionPayQRFee, unionPayQRNum, unionPayPassFee, ",
        "unionPayPassNum, cloudFee, cloudNum, annual_goals, price_ave, entrance_flow_ave, ",
        "outbound_flow_ave, turnover_ave, usage_rate, update_time",
        "from t_park_statistics_day",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_name", property="parkName", jdbcType=JdbcType.VARCHAR),
        @Result(column="statistic_time", property="statisticTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="entrance_flow", property="entranceFlow", jdbcType=JdbcType.INTEGER),
        @Result(column="outbound_flow", property="outboundFlow", jdbcType=JdbcType.INTEGER),
        @Result(column="totalPayFee", property="totalpayfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="totalPayNum", property="totalpaynum", jdbcType=JdbcType.INTEGER),
        @Result(column="unionPayFee", property="unionpayfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="unionPayNum", property="unionpaynum", jdbcType=JdbcType.INTEGER),
        @Result(column="unionPayQRFee", property="unionpayqrfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="unionPayQRNum", property="unionpayqrnum", jdbcType=JdbcType.INTEGER),
        @Result(column="unionPayPassFee", property="unionpaypassfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="unionPayPassNum", property="unionpaypassnum", jdbcType=JdbcType.INTEGER),
        @Result(column="cloudFee", property="cloudfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="cloudNum", property="cloudnum", jdbcType=JdbcType.INTEGER),
        @Result(column="annual_goals", property="annualGoals", jdbcType=JdbcType.INTEGER),
        @Result(column="price_ave", property="priceAve", jdbcType=JdbcType.DOUBLE),
        @Result(column="entrance_flow_ave", property="entranceFlowAve", jdbcType=JdbcType.DOUBLE),
        @Result(column="outbound_flow_ave", property="outboundFlowAve", jdbcType=JdbcType.DOUBLE),
        @Result(column="turnover_ave", property="turnoverAve", jdbcType=JdbcType.DOUBLE),
        @Result(column="usage_rate", property="usageRate", jdbcType=JdbcType.DOUBLE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.VARCHAR)
    })
    TParkStatisticsDay selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TParkStatisticsDaySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TParkStatisticsDay record, @Param("example") TParkStatisticsDayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TParkStatisticsDaySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TParkStatisticsDay record, @Param("example") TParkStatisticsDayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @UpdateProvider(type= TParkStatisticsDaySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TParkStatisticsDay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    @Update({
        "update t_park_statistics_day",
        "set park_id = #{parkId,jdbcType=INTEGER},",
          "park_name = #{parkName,jdbcType=VARCHAR},",
          "statistic_time = #{statisticTime,jdbcType=VARCHAR},",
          "entrance_flow = #{entranceFlow,jdbcType=INTEGER},",
          "outbound_flow = #{outboundFlow,jdbcType=INTEGER},",
          "totalPayFee = #{totalpayfee,jdbcType=DOUBLE},",
          "totalPayNum = #{totalpaynum,jdbcType=INTEGER},",
          "unionPayFee = #{unionpayfee,jdbcType=DOUBLE},",
          "unionPayNum = #{unionpaynum,jdbcType=INTEGER},",
          "unionPayQRFee = #{unionpayqrfee,jdbcType=DOUBLE},",
          "unionPayQRNum = #{unionpayqrnum,jdbcType=INTEGER},",
          "unionPayPassFee = #{unionpaypassfee,jdbcType=DOUBLE},",
          "unionPayPassNum = #{unionpaypassnum,jdbcType=INTEGER},",
          "cloudFee = #{cloudfee,jdbcType=DOUBLE},",
          "cloudNum = #{cloudnum,jdbcType=INTEGER},",
          "annual_goals = #{annualGoals,jdbcType=INTEGER},",
          "price_ave = #{priceAve,jdbcType=DOUBLE},",
          "entrance_flow_ave = #{entranceFlowAve,jdbcType=DOUBLE},",
          "outbound_flow_ave = #{outboundFlowAve,jdbcType=DOUBLE},",
          "turnover_ave = #{turnoverAve,jdbcType=DOUBLE},",
          "usage_rate = #{usageRate,jdbcType=DOUBLE},",
          "update_time = #{updateTime,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TParkStatisticsDay record);
}