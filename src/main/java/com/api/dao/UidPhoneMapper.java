package com.api.dao;

import com.api.dao.sqlProvider.UidPhoneSqlProvider;
import com.api.entity.UidPhone;
import com.api.entity.UidPhoneCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface UidPhoneMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @SelectProvider(type=UidPhoneSqlProvider.class, method="countByExample")
    long countByExample(UidPhoneCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @DeleteProvider(type=UidPhoneSqlProvider.class, method="deleteByExample")
    int deleteByExample(UidPhoneCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @Delete({
        "delete from uid_phone",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @Insert({
        "insert into uid_phone (Id, uid, ",
        "phone)",
        "values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, ",
        "#{phone,jdbcType=VARCHAR})"
    })
    int insert(UidPhone record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @InsertProvider(type=UidPhoneSqlProvider.class, method="insertSelective")
    int insertSelective(UidPhone record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @SelectProvider(type=UidPhoneSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR)
    })
    List<UidPhone> selectByExample(UidPhoneCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "Id, uid, phone",
        "from uid_phone",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR)
    })
    UidPhone selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UidPhoneSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UidPhone record, @Param("example") UidPhoneCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UidPhoneSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UidPhone record, @Param("example") UidPhoneCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UidPhoneSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UidPhone record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uid_phone
     *
     * @mbg.generated
     */
    @Update({
        "update uid_phone",
        "set uid = #{uid,jdbcType=INTEGER},",
          "phone = #{phone,jdbcType=VARCHAR}",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UidPhone record);
}