package com.api.dao.sqlProvider;

import com.api.entity.PwpMemberDetail;
import com.api.entity.PwpMemberDetailCriteria;
import com.api.entity.PwpMemberDetailCriteria.Criteria;
import com.api.entity.PwpMemberDetailCriteria.Criterion;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class PwpMemberDetailSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_detail
     *
     * @mbg.generated
     */
    public String countByExample(PwpMemberDetailCriteria example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("pwp_member_detail");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_detail
     *
     * @mbg.generated
     */
    public String deleteByExample(PwpMemberDetailCriteria example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("pwp_member_detail");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_detail
     *
     * @mbg.generated
     */
    public String insertSelective(PwpMemberDetail record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("pwp_member_detail");
        
        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getMemberId() != null) {
            sql.VALUES("member_id", "#{memberId,jdbcType=INTEGER}");
        }
        
        if (record.getAddSequence() != null) {
            sql.VALUES("add_sequence", "#{addSequence,jdbcType=INTEGER}");
        }
        
        if (record.getCarNum() != null) {
            sql.VALUES("car_num", "#{carNum,jdbcType=VARCHAR}");
        }
        
        if (record.getRealname() != null) {
            sql.VALUES("realname", "#{realname,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            sql.VALUES("password", "#{password,jdbcType=VARCHAR}");
        }
        
        if (record.getPasswordKey() != null) {
            sql.VALUES("password_key", "#{passwordKey,jdbcType=VARCHAR}");
        }
        
        if (record.getPwdSafeLevel() != null) {
            sql.VALUES("pwd_safe_level", "#{pwdSafeLevel,jdbcType=TINYINT}");
        }
        
        if (record.getPhone() != null) {
            sql.VALUES("phone", "#{phone,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.VALUES("email", "#{email,jdbcType=VARCHAR}");
        }
        
        if (record.getSex() != null) {
            sql.VALUES("sex", "#{sex,jdbcType=CHAR}");
        }
        
        if (record.getSource() != null) {
            sql.VALUES("source", "#{source,jdbcType=TINYINT}");
        }
        
        if (record.getBalance() != null) {
            sql.VALUES("balance", "#{balance,jdbcType=DECIMAL}");
        }
        
        if (record.getLeagueId() != null) {
            sql.VALUES("league_id", "#{leagueId,jdbcType=INTEGER}");
        }
        
        if (record.getLeagueAdmin() != null) {
            sql.VALUES("league_admin", "#{leagueAdmin,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=TINYINT}");
        }
        
        if (record.getIdStatus() != null) {
            sql.VALUES("id_status", "#{idStatus,jdbcType=TINYINT}");
        }
        
        if (record.getIdCardNo() != null) {
            sql.VALUES("id_card_no", "#{idCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdCardFront() != null) {
            sql.VALUES("id_card_front", "#{idCardFront,jdbcType=VARCHAR}");
        }
        
        if (record.getIdCardBack() != null) {
            sql.VALUES("id_card_back", "#{idCardBack,jdbcType=VARCHAR}");
        }
        
        if (record.getBillingAccountId() != null) {
            sql.VALUES("billing_account_id", "#{billingAccountId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardId() != null) {
            sql.VALUES("p_card_id", "#{pCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardCode() != null) {
            sql.VALUES("p_card_code", "#{pCardCode,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardPwd() != null) {
            sql.VALUES("p_card_pwd", "#{pCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getCarCardNo() != null) {
            sql.VALUES("car_card_no", "#{carCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getcCardId() != null) {
            sql.VALUES("c_card_id", "#{cCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getcCardPwd() != null) {
            sql.VALUES("c_card_pwd", "#{cCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverCardNo() != null) {
            sql.VALUES("driver_card_no", "#{driverCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCardIssue() != null) {
            sql.VALUES("card_issue", "#{cardIssue,jdbcType=TINYINT}");
        }
        
        if (record.getCredentialsType() != null) {
            sql.VALUES("credentials_type", "#{credentialsType,jdbcType=SMALLINT}");
        }
        
        if (record.getCredentialsCode() != null) {
            sql.VALUES("credentials_code", "#{credentialsCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCredentialsPic() != null) {
            sql.VALUES("credentials_pic", "#{credentialsPic,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPic() != null) {
            sql.VALUES("car_pic", "#{carPic,jdbcType=VARCHAR}");
        }
        
        if (record.getCarDriveNo() != null) {
            sql.VALUES("car_drive_no", "#{carDriveNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCarEngineCode() != null) {
            sql.VALUES("car_engine_code", "#{carEngineCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCarType() != null) {
            sql.VALUES("car_type", "#{carType,jdbcType=TINYINT}");
        }
        
        if (record.getCarInsuranceNo() != null) {
            sql.VALUES("car_insurance_no", "#{carInsuranceNo,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.VALUES("address", "#{address,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaId() != null) {
            sql.VALUES("area_id", "#{areaId,jdbcType=INTEGER}");
        }
        
        if (record.getUse() != null) {
            sql.VALUES("use", "#{use,jdbcType=VARCHAR}");
        }
        
        if (record.getUsedYears() != null) {
            sql.VALUES("used_years", "#{usedYears,jdbcType=TINYINT}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            sql.VALUES("create_date", "#{createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getReviewtime() != null) {
            sql.VALUES("reviewtime", "#{reviewtime,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getVerifyMsg() != null) {
            sql.VALUES("verify_msg", "#{verifyMsg,jdbcType=VARCHAR}");
        }
        
        if (record.getPicture() != null) {
            sql.VALUES("picture", "#{picture,jdbcType=VARCHAR}");
        }
        
        if (record.getBindWeixinAccount() != null) {
            sql.VALUES("bind_weixin_account", "#{bindWeixinAccount,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_detail
     *
     * @mbg.generated
     */
    public String selectByExample(PwpMemberDetailCriteria example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("id");
        } else {
            sql.SELECT("id");
        }
        sql.SELECT("member_id");
        sql.SELECT("add_sequence");
        sql.SELECT("car_num");
        sql.SELECT("realname");
        sql.SELECT("password");
        sql.SELECT("password_key");
        sql.SELECT("pwd_safe_level");
        sql.SELECT("phone");
        sql.SELECT("email");
        sql.SELECT("sex");
        sql.SELECT("source");
        sql.SELECT("balance");
        sql.SELECT("league_id");
        sql.SELECT("league_admin");
        sql.SELECT("status");
        sql.SELECT("id_status");
        sql.SELECT("id_card_no");
        sql.SELECT("id_card_front");
        sql.SELECT("id_card_back");
        sql.SELECT("billing_account_id");
        sql.SELECT("p_card_id");
        sql.SELECT("p_card_code");
        sql.SELECT("p_card_pwd");
        sql.SELECT("car_card_no");
        sql.SELECT("c_card_id");
        sql.SELECT("c_card_pwd");
        sql.SELECT("driver_card_no");
        sql.SELECT("card_issue");
        sql.SELECT("credentials_type");
        sql.SELECT("credentials_code");
        sql.SELECT("credentials_pic");
        sql.SELECT("car_pic");
        sql.SELECT("car_drive_no");
        sql.SELECT("car_engine_code");
        sql.SELECT("car_type");
        sql.SELECT("car_insurance_no");
        sql.SELECT("address");
        sql.SELECT("area_id");
        sql.SELECT("use");
        sql.SELECT("used_years");
        sql.SELECT("create_time");
        sql.SELECT("create_date");
        sql.SELECT("reviewtime");
        sql.SELECT("update_time");
        sql.SELECT("verify_msg");
        sql.SELECT("picture");
        sql.SELECT("bind_weixin_account");
        sql.FROM("pwp_member_detail");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_detail
     *
     * @mbg.generated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        PwpMemberDetail record = (PwpMemberDetail) parameter.get("record");
        PwpMemberDetailCriteria example = (PwpMemberDetailCriteria) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("pwp_member_detail");
        
        if (record.getId() != null) {
            sql.SET("id = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getMemberId() != null) {
            sql.SET("member_id = #{record.memberId,jdbcType=INTEGER}");
        }
        
        if (record.getAddSequence() != null) {
            sql.SET("add_sequence = #{record.addSequence,jdbcType=INTEGER}");
        }
        
        if (record.getCarNum() != null) {
            sql.SET("car_num = #{record.carNum,jdbcType=VARCHAR}");
        }
        
        if (record.getRealname() != null) {
            sql.SET("realname = #{record.realname,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            sql.SET("password = #{record.password,jdbcType=VARCHAR}");
        }
        
        if (record.getPasswordKey() != null) {
            sql.SET("password_key = #{record.passwordKey,jdbcType=VARCHAR}");
        }
        
        if (record.getPwdSafeLevel() != null) {
            sql.SET("pwd_safe_level = #{record.pwdSafeLevel,jdbcType=TINYINT}");
        }
        
        if (record.getPhone() != null) {
            sql.SET("phone = #{record.phone,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("email = #{record.email,jdbcType=VARCHAR}");
        }
        
        if (record.getSex() != null) {
            sql.SET("sex = #{record.sex,jdbcType=CHAR}");
        }
        
        if (record.getSource() != null) {
            sql.SET("source = #{record.source,jdbcType=TINYINT}");
        }
        
        if (record.getBalance() != null) {
            sql.SET("balance = #{record.balance,jdbcType=DECIMAL}");
        }
        
        if (record.getLeagueId() != null) {
            sql.SET("league_id = #{record.leagueId,jdbcType=INTEGER}");
        }
        
        if (record.getLeagueAdmin() != null) {
            sql.SET("league_admin = #{record.leagueAdmin,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{record.status,jdbcType=TINYINT}");
        }
        
        if (record.getIdStatus() != null) {
            sql.SET("id_status = #{record.idStatus,jdbcType=TINYINT}");
        }
        
        if (record.getIdCardNo() != null) {
            sql.SET("id_card_no = #{record.idCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdCardFront() != null) {
            sql.SET("id_card_front = #{record.idCardFront,jdbcType=VARCHAR}");
        }
        
        if (record.getIdCardBack() != null) {
            sql.SET("id_card_back = #{record.idCardBack,jdbcType=VARCHAR}");
        }
        
        if (record.getBillingAccountId() != null) {
            sql.SET("billing_account_id = #{record.billingAccountId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardId() != null) {
            sql.SET("p_card_id = #{record.pCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardCode() != null) {
            sql.SET("p_card_code = #{record.pCardCode,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardPwd() != null) {
            sql.SET("p_card_pwd = #{record.pCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getCarCardNo() != null) {
            sql.SET("car_card_no = #{record.carCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getcCardId() != null) {
            sql.SET("c_card_id = #{record.cCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getcCardPwd() != null) {
            sql.SET("c_card_pwd = #{record.cCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverCardNo() != null) {
            sql.SET("driver_card_no = #{record.driverCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCardIssue() != null) {
            sql.SET("card_issue = #{record.cardIssue,jdbcType=TINYINT}");
        }
        
        if (record.getCredentialsType() != null) {
            sql.SET("credentials_type = #{record.credentialsType,jdbcType=SMALLINT}");
        }
        
        if (record.getCredentialsCode() != null) {
            sql.SET("credentials_code = #{record.credentialsCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCredentialsPic() != null) {
            sql.SET("credentials_pic = #{record.credentialsPic,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPic() != null) {
            sql.SET("car_pic = #{record.carPic,jdbcType=VARCHAR}");
        }
        
        if (record.getCarDriveNo() != null) {
            sql.SET("car_drive_no = #{record.carDriveNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCarEngineCode() != null) {
            sql.SET("car_engine_code = #{record.carEngineCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCarType() != null) {
            sql.SET("car_type = #{record.carType,jdbcType=TINYINT}");
        }
        
        if (record.getCarInsuranceNo() != null) {
            sql.SET("car_insurance_no = #{record.carInsuranceNo,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaId() != null) {
            sql.SET("area_id = #{record.areaId,jdbcType=INTEGER}");
        }
        
        if (record.getUse() != null) {
            sql.SET("use = #{record.use,jdbcType=VARCHAR}");
        }
        
        if (record.getUsedYears() != null) {
            sql.SET("used_years = #{record.usedYears,jdbcType=TINYINT}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("create_date = #{record.createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getReviewtime() != null) {
            sql.SET("reviewtime = #{record.reviewtime,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getVerifyMsg() != null) {
            sql.SET("verify_msg = #{record.verifyMsg,jdbcType=VARCHAR}");
        }
        
        if (record.getPicture() != null) {
            sql.SET("picture = #{record.picture,jdbcType=VARCHAR}");
        }
        
        if (record.getBindWeixinAccount() != null) {
            sql.SET("bind_weixin_account = #{record.bindWeixinAccount,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_detail
     *
     * @mbg.generated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("pwp_member_detail");
        
        sql.SET("id = #{record.id,jdbcType=INTEGER}");
        sql.SET("member_id = #{record.memberId,jdbcType=INTEGER}");
        sql.SET("add_sequence = #{record.addSequence,jdbcType=INTEGER}");
        sql.SET("car_num = #{record.carNum,jdbcType=VARCHAR}");
        sql.SET("realname = #{record.realname,jdbcType=VARCHAR}");
        sql.SET("password = #{record.password,jdbcType=VARCHAR}");
        sql.SET("password_key = #{record.passwordKey,jdbcType=VARCHAR}");
        sql.SET("pwd_safe_level = #{record.pwdSafeLevel,jdbcType=TINYINT}");
        sql.SET("phone = #{record.phone,jdbcType=VARCHAR}");
        sql.SET("email = #{record.email,jdbcType=VARCHAR}");
        sql.SET("sex = #{record.sex,jdbcType=CHAR}");
        sql.SET("source = #{record.source,jdbcType=TINYINT}");
        sql.SET("balance = #{record.balance,jdbcType=DECIMAL}");
        sql.SET("league_id = #{record.leagueId,jdbcType=INTEGER}");
        sql.SET("league_admin = #{record.leagueAdmin,jdbcType=INTEGER}");
        sql.SET("status = #{record.status,jdbcType=TINYINT}");
        sql.SET("id_status = #{record.idStatus,jdbcType=TINYINT}");
        sql.SET("id_card_no = #{record.idCardNo,jdbcType=VARCHAR}");
        sql.SET("id_card_front = #{record.idCardFront,jdbcType=VARCHAR}");
        sql.SET("id_card_back = #{record.idCardBack,jdbcType=VARCHAR}");
        sql.SET("billing_account_id = #{record.billingAccountId,jdbcType=VARCHAR}");
        sql.SET("p_card_id = #{record.pCardId,jdbcType=VARCHAR}");
        sql.SET("p_card_code = #{record.pCardCode,jdbcType=VARCHAR}");
        sql.SET("p_card_pwd = #{record.pCardPwd,jdbcType=VARCHAR}");
        sql.SET("car_card_no = #{record.carCardNo,jdbcType=VARCHAR}");
        sql.SET("c_card_id = #{record.cCardId,jdbcType=VARCHAR}");
        sql.SET("c_card_pwd = #{record.cCardPwd,jdbcType=VARCHAR}");
        sql.SET("driver_card_no = #{record.driverCardNo,jdbcType=VARCHAR}");
        sql.SET("card_issue = #{record.cardIssue,jdbcType=TINYINT}");
        sql.SET("credentials_type = #{record.credentialsType,jdbcType=SMALLINT}");
        sql.SET("credentials_code = #{record.credentialsCode,jdbcType=VARCHAR}");
        sql.SET("credentials_pic = #{record.credentialsPic,jdbcType=VARCHAR}");
        sql.SET("car_pic = #{record.carPic,jdbcType=VARCHAR}");
        sql.SET("car_drive_no = #{record.carDriveNo,jdbcType=VARCHAR}");
        sql.SET("car_engine_code = #{record.carEngineCode,jdbcType=VARCHAR}");
        sql.SET("car_type = #{record.carType,jdbcType=TINYINT}");
        sql.SET("car_insurance_no = #{record.carInsuranceNo,jdbcType=VARCHAR}");
        sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        sql.SET("area_id = #{record.areaId,jdbcType=INTEGER}");
        sql.SET("use = #{record.use,jdbcType=VARCHAR}");
        sql.SET("used_years = #{record.usedYears,jdbcType=TINYINT}");
        sql.SET("create_time = #{record.createTime,jdbcType=VARCHAR}");
        sql.SET("create_date = #{record.createDate,jdbcType=VARCHAR}");
        sql.SET("reviewtime = #{record.reviewtime,jdbcType=VARCHAR}");
        sql.SET("update_time = #{record.updateTime,jdbcType=VARCHAR}");
        sql.SET("verify_msg = #{record.verifyMsg,jdbcType=VARCHAR}");
        sql.SET("picture = #{record.picture,jdbcType=VARCHAR}");
        sql.SET("bind_weixin_account = #{record.bindWeixinAccount,jdbcType=VARCHAR}");
        
        PwpMemberDetailCriteria example = (PwpMemberDetailCriteria) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_detail
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(PwpMemberDetail record) {
        SQL sql = new SQL();
        sql.UPDATE("pwp_member_detail");
        
        if (record.getMemberId() != null) {
            sql.SET("member_id = #{memberId,jdbcType=INTEGER}");
        }
        
        if (record.getAddSequence() != null) {
            sql.SET("add_sequence = #{addSequence,jdbcType=INTEGER}");
        }
        
        if (record.getCarNum() != null) {
            sql.SET("car_num = #{carNum,jdbcType=VARCHAR}");
        }
        
        if (record.getRealname() != null) {
            sql.SET("realname = #{realname,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            sql.SET("password = #{password,jdbcType=VARCHAR}");
        }
        
        if (record.getPasswordKey() != null) {
            sql.SET("password_key = #{passwordKey,jdbcType=VARCHAR}");
        }
        
        if (record.getPwdSafeLevel() != null) {
            sql.SET("pwd_safe_level = #{pwdSafeLevel,jdbcType=TINYINT}");
        }
        
        if (record.getPhone() != null) {
            sql.SET("phone = #{phone,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("email = #{email,jdbcType=VARCHAR}");
        }
        
        if (record.getSex() != null) {
            sql.SET("sex = #{sex,jdbcType=CHAR}");
        }
        
        if (record.getSource() != null) {
            sql.SET("source = #{source,jdbcType=TINYINT}");
        }
        
        if (record.getBalance() != null) {
            sql.SET("balance = #{balance,jdbcType=DECIMAL}");
        }
        
        if (record.getLeagueId() != null) {
            sql.SET("league_id = #{leagueId,jdbcType=INTEGER}");
        }
        
        if (record.getLeagueAdmin() != null) {
            sql.SET("league_admin = #{leagueAdmin,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=TINYINT}");
        }
        
        if (record.getIdStatus() != null) {
            sql.SET("id_status = #{idStatus,jdbcType=TINYINT}");
        }
        
        if (record.getIdCardNo() != null) {
            sql.SET("id_card_no = #{idCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdCardFront() != null) {
            sql.SET("id_card_front = #{idCardFront,jdbcType=VARCHAR}");
        }
        
        if (record.getIdCardBack() != null) {
            sql.SET("id_card_back = #{idCardBack,jdbcType=VARCHAR}");
        }
        
        if (record.getBillingAccountId() != null) {
            sql.SET("billing_account_id = #{billingAccountId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardId() != null) {
            sql.SET("p_card_id = #{pCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardCode() != null) {
            sql.SET("p_card_code = #{pCardCode,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardPwd() != null) {
            sql.SET("p_card_pwd = #{pCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getCarCardNo() != null) {
            sql.SET("car_card_no = #{carCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getcCardId() != null) {
            sql.SET("c_card_id = #{cCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getcCardPwd() != null) {
            sql.SET("c_card_pwd = #{cCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverCardNo() != null) {
            sql.SET("driver_card_no = #{driverCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCardIssue() != null) {
            sql.SET("card_issue = #{cardIssue,jdbcType=TINYINT}");
        }
        
        if (record.getCredentialsType() != null) {
            sql.SET("credentials_type = #{credentialsType,jdbcType=SMALLINT}");
        }
        
        if (record.getCredentialsCode() != null) {
            sql.SET("credentials_code = #{credentialsCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCredentialsPic() != null) {
            sql.SET("credentials_pic = #{credentialsPic,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPic() != null) {
            sql.SET("car_pic = #{carPic,jdbcType=VARCHAR}");
        }
        
        if (record.getCarDriveNo() != null) {
            sql.SET("car_drive_no = #{carDriveNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCarEngineCode() != null) {
            sql.SET("car_engine_code = #{carEngineCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCarType() != null) {
            sql.SET("car_type = #{carType,jdbcType=TINYINT}");
        }
        
        if (record.getCarInsuranceNo() != null) {
            sql.SET("car_insurance_no = #{carInsuranceNo,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{address,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaId() != null) {
            sql.SET("area_id = #{areaId,jdbcType=INTEGER}");
        }
        
        if (record.getUse() != null) {
            sql.SET("use = #{use,jdbcType=VARCHAR}");
        }
        
        if (record.getUsedYears() != null) {
            sql.SET("used_years = #{usedYears,jdbcType=TINYINT}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("create_date = #{createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getReviewtime() != null) {
            sql.SET("reviewtime = #{reviewtime,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getVerifyMsg() != null) {
            sql.SET("verify_msg = #{verifyMsg,jdbcType=VARCHAR}");
        }
        
        if (record.getPicture() != null) {
            sql.SET("picture = #{picture,jdbcType=VARCHAR}");
        }
        
        if (record.getBindWeixinAccount() != null) {
            sql.SET("bind_weixin_account = #{bindWeixinAccount,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("id = #{id,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_detail
     *
     * @mbg.generated
     */
    protected void applyWhere(SQL sql, PwpMemberDetailCriteria example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}