package com.api.dao.sqlProvider;

import com.api.entity.PwpMemberPCard;
import com.api.entity.PwpMemberPCardCriteria;
import com.api.entity.PwpMemberPCardCriteria.Criteria;
import com.api.entity.PwpMemberPCardCriteria.Criterion;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class PwpMemberPCardSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_p_card
     *
     * @mbg.generated
     */
    public String countByExample(PwpMemberPCardCriteria example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("pwp_member_p_card");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_p_card
     *
     * @mbg.generated
     */
    public String deleteByExample(PwpMemberPCardCriteria example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("pwp_member_p_card");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_p_card
     *
     * @mbg.generated
     */
    public String insertSelective(PwpMemberPCard record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("pwp_member_p_card");
        
        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getMemberId() != null) {
            sql.VALUES("member_id", "#{memberId,jdbcType=INTEGER}");
        }
        
        if (record.getAddSequence() != null) {
            sql.VALUES("add_sequence", "#{addSequence,jdbcType=INTEGER}");
        }
        
        if (record.getNickName() != null) {
            sql.VALUES("nick_name", "#{nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getAccount() != null) {
            sql.VALUES("account", "#{account,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            sql.VALUES("password", "#{password,jdbcType=VARCHAR}");
        }
        
        if (record.getRealname() != null) {
            sql.VALUES("realname", "#{realname,jdbcType=VARCHAR}");
        }
        
        if (record.getSex() != null) {
            sql.VALUES("sex", "#{sex,jdbcType=TINYINT}");
        }
        
        if (record.getPhone() != null) {
            sql.VALUES("phone", "#{phone,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.VALUES("email", "#{email,jdbcType=VARCHAR}");
        }
        
        if (record.getCredentialsType() != null) {
            sql.VALUES("credentials_type", "#{credentialsType,jdbcType=TINYINT}");
        }
        
        if (record.getCredentialsCode() != null) {
            sql.VALUES("credentials_code", "#{credentialsCode,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaId() != null) {
            sql.VALUES("area_id", "#{areaId,jdbcType=INTEGER}");
        }
        
        if (record.getAddress() != null) {
            sql.VALUES("address", "#{address,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardCode() != null) {
            sql.VALUES("p_card_code", "#{pCardCode,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardId() != null) {
            sql.VALUES("p_card_id", "#{pCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardPwd() != null) {
            sql.VALUES("p_card_pwd", "#{pCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberPCardStatus() != null) {
            sql.VALUES("member_p_card_status", "#{memberPCardStatus,jdbcType=TINYINT}");
        }
        
        if (record.getBalance() != null) {
            sql.VALUES("balance", "#{balance,jdbcType=DECIMAL}");
        }
        
        if (record.getBillingAccountId() != null) {
            sql.VALUES("billing_account_id", "#{billingAccountId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getSalt() != null) {
            sql.VALUES("salt", "#{salt,jdbcType=VARCHAR}");
        }
        
        if (record.getWeixinAccount() != null) {
            sql.VALUES("weixin_account", "#{weixinAccount,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_p_card
     *
     * @mbg.generated
     */
    public String selectByExample(PwpMemberPCardCriteria example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("id");
        } else {
            sql.SELECT("id");
        }
        sql.SELECT("member_id");
        sql.SELECT("add_sequence");
        sql.SELECT("nick_name");
        sql.SELECT("account");
        sql.SELECT("password");
        sql.SELECT("realname");
        sql.SELECT("sex");
        sql.SELECT("phone");
        sql.SELECT("email");
        sql.SELECT("credentials_type");
        sql.SELECT("credentials_code");
        sql.SELECT("area_id");
        sql.SELECT("address");
        sql.SELECT("p_card_code");
        sql.SELECT("p_card_id");
        sql.SELECT("p_card_pwd");
        sql.SELECT("member_p_card_status");
        sql.SELECT("balance");
        sql.SELECT("billing_account_id");
        sql.SELECT("create_time");
        sql.SELECT("update_time");
        sql.SELECT("salt");
        sql.SELECT("weixin_account");
        sql.FROM("pwp_member_p_card");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_p_card
     *
     * @mbg.generated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        PwpMemberPCard record = (PwpMemberPCard) parameter.get("record");
        PwpMemberPCardCriteria example = (PwpMemberPCardCriteria) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("pwp_member_p_card");
        
        if (record.getId() != null) {
            sql.SET("id = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getMemberId() != null) {
            sql.SET("member_id = #{record.memberId,jdbcType=INTEGER}");
        }
        
        if (record.getAddSequence() != null) {
            sql.SET("add_sequence = #{record.addSequence,jdbcType=INTEGER}");
        }
        
        if (record.getNickName() != null) {
            sql.SET("nick_name = #{record.nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getAccount() != null) {
            sql.SET("account = #{record.account,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            sql.SET("password = #{record.password,jdbcType=VARCHAR}");
        }
        
        if (record.getRealname() != null) {
            sql.SET("realname = #{record.realname,jdbcType=VARCHAR}");
        }
        
        if (record.getSex() != null) {
            sql.SET("sex = #{record.sex,jdbcType=TINYINT}");
        }
        
        if (record.getPhone() != null) {
            sql.SET("phone = #{record.phone,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("email = #{record.email,jdbcType=VARCHAR}");
        }
        
        if (record.getCredentialsType() != null) {
            sql.SET("credentials_type = #{record.credentialsType,jdbcType=TINYINT}");
        }
        
        if (record.getCredentialsCode() != null) {
            sql.SET("credentials_code = #{record.credentialsCode,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaId() != null) {
            sql.SET("area_id = #{record.areaId,jdbcType=INTEGER}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardCode() != null) {
            sql.SET("p_card_code = #{record.pCardCode,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardId() != null) {
            sql.SET("p_card_id = #{record.pCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardPwd() != null) {
            sql.SET("p_card_pwd = #{record.pCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberPCardStatus() != null) {
            sql.SET("member_p_card_status = #{record.memberPCardStatus,jdbcType=TINYINT}");
        }
        
        if (record.getBalance() != null) {
            sql.SET("balance = #{record.balance,jdbcType=DECIMAL}");
        }
        
        if (record.getBillingAccountId() != null) {
            sql.SET("billing_account_id = #{record.billingAccountId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getSalt() != null) {
            sql.SET("salt = #{record.salt,jdbcType=VARCHAR}");
        }
        
        if (record.getWeixinAccount() != null) {
            sql.SET("weixin_account = #{record.weixinAccount,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_p_card
     *
     * @mbg.generated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("pwp_member_p_card");
        
        sql.SET("id = #{record.id,jdbcType=INTEGER}");
        sql.SET("member_id = #{record.memberId,jdbcType=INTEGER}");
        sql.SET("add_sequence = #{record.addSequence,jdbcType=INTEGER}");
        sql.SET("nick_name = #{record.nickName,jdbcType=VARCHAR}");
        sql.SET("account = #{record.account,jdbcType=VARCHAR}");
        sql.SET("password = #{record.password,jdbcType=VARCHAR}");
        sql.SET("realname = #{record.realname,jdbcType=VARCHAR}");
        sql.SET("sex = #{record.sex,jdbcType=TINYINT}");
        sql.SET("phone = #{record.phone,jdbcType=VARCHAR}");
        sql.SET("email = #{record.email,jdbcType=VARCHAR}");
        sql.SET("credentials_type = #{record.credentialsType,jdbcType=TINYINT}");
        sql.SET("credentials_code = #{record.credentialsCode,jdbcType=VARCHAR}");
        sql.SET("area_id = #{record.areaId,jdbcType=INTEGER}");
        sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        sql.SET("p_card_code = #{record.pCardCode,jdbcType=VARCHAR}");
        sql.SET("p_card_id = #{record.pCardId,jdbcType=VARCHAR}");
        sql.SET("p_card_pwd = #{record.pCardPwd,jdbcType=VARCHAR}");
        sql.SET("member_p_card_status = #{record.memberPCardStatus,jdbcType=TINYINT}");
        sql.SET("balance = #{record.balance,jdbcType=DECIMAL}");
        sql.SET("billing_account_id = #{record.billingAccountId,jdbcType=INTEGER}");
        sql.SET("create_time = #{record.createTime,jdbcType=VARCHAR}");
        sql.SET("update_time = #{record.updateTime,jdbcType=VARCHAR}");
        sql.SET("salt = #{record.salt,jdbcType=VARCHAR}");
        sql.SET("weixin_account = #{record.weixinAccount,jdbcType=VARCHAR}");
        
        PwpMemberPCardCriteria example = (PwpMemberPCardCriteria) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_p_card
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(PwpMemberPCard record) {
        SQL sql = new SQL();
        sql.UPDATE("pwp_member_p_card");
        
        if (record.getMemberId() != null) {
            sql.SET("member_id = #{memberId,jdbcType=INTEGER}");
        }
        
        if (record.getAddSequence() != null) {
            sql.SET("add_sequence = #{addSequence,jdbcType=INTEGER}");
        }
        
        if (record.getNickName() != null) {
            sql.SET("nick_name = #{nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getAccount() != null) {
            sql.SET("account = #{account,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            sql.SET("password = #{password,jdbcType=VARCHAR}");
        }
        
        if (record.getRealname() != null) {
            sql.SET("realname = #{realname,jdbcType=VARCHAR}");
        }
        
        if (record.getSex() != null) {
            sql.SET("sex = #{sex,jdbcType=TINYINT}");
        }
        
        if (record.getPhone() != null) {
            sql.SET("phone = #{phone,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("email = #{email,jdbcType=VARCHAR}");
        }
        
        if (record.getCredentialsType() != null) {
            sql.SET("credentials_type = #{credentialsType,jdbcType=TINYINT}");
        }
        
        if (record.getCredentialsCode() != null) {
            sql.SET("credentials_code = #{credentialsCode,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaId() != null) {
            sql.SET("area_id = #{areaId,jdbcType=INTEGER}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{address,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardCode() != null) {
            sql.SET("p_card_code = #{pCardCode,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardId() != null) {
            sql.SET("p_card_id = #{pCardId,jdbcType=VARCHAR}");
        }
        
        if (record.getpCardPwd() != null) {
            sql.SET("p_card_pwd = #{pCardPwd,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberPCardStatus() != null) {
            sql.SET("member_p_card_status = #{memberPCardStatus,jdbcType=TINYINT}");
        }
        
        if (record.getBalance() != null) {
            sql.SET("balance = #{balance,jdbcType=DECIMAL}");
        }
        
        if (record.getBillingAccountId() != null) {
            sql.SET("billing_account_id = #{billingAccountId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getSalt() != null) {
            sql.SET("salt = #{salt,jdbcType=VARCHAR}");
        }
        
        if (record.getWeixinAccount() != null) {
            sql.SET("weixin_account = #{weixinAccount,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("id = #{id,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pwp_member_p_card
     *
     * @mbg.generated
     */
    protected void applyWhere(SQL sql, PwpMemberPCardCriteria example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}