package com.api.dao.sqlProvider;

import com.api.entity.TElectronPayment;
import com.api.entity.TElectronPaymentCriteria;
import com.api.entity.TElectronPaymentCriteria.Criteria;
import com.api.entity.TElectronPaymentCriteria.Criterion;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class TElectronPaymentSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    public String countByExample(TElectronPaymentCriteria example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("t_electron_payment");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    public String deleteByExample(TElectronPaymentCriteria example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("t_electron_payment");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    public String insertSelective(TElectronPayment record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("t_electron_payment");
        
        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getParkId() != null) {
            sql.VALUES("park_id", "#{parkId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateDate() != null) {
            sql.VALUES("create_date", "#{createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getTempOnlineTotal() != null) {
            sql.VALUES("temp_online_total", "#{tempOnlineTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineActualTotal() != null) {
            sql.VALUES("fix_online_actual_total", "#{fixOnlineActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempQpasspayTotal() != null) {
            sql.VALUES("temp_qPassPay_Total", "#{tempQpasspayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPrepayTotal() != null) {
            sql.VALUES("temp_PrePay_Total", "#{tempPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getWechatPrepayTotal() != null) {
            sql.VALUES("weChat_PrePay_Total", "#{wechatPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayPrepayTotal() != null) {
            sql.VALUES("alipay_PrePay_Total", "#{alipayPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getThirdPrepayTotal() != null) {
            sql.VALUES("third_PrePay_Total", "#{thirdPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMonthlyWechatTotal() != null) {
            sql.VALUES("monthly_weChat_Total", "#{monthlyWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempUnionpayTotal() != null) {
            sql.VALUES("temp_unionPay_Total", "#{tempUnionpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCardTotal() != null) {
            sql.VALUES("temp_card_Total", "#{tempCardTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempRightsTotal() != null) {
            sql.VALUES("temp_rights_Total", "#{tempRightsTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempWechatTotal() != null) {
            sql.VALUES("temp_weChat_Total", "#{tempWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempAlipayTotal() != null) {
            sql.VALUES("temp_alipay_Total", "#{tempAlipayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getPayLessTotal() != null) {
            sql.VALUES("pay_less_Total", "#{payLessTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getPayMoreTotal() != null) {
            sql.VALUES("pay_more_Total", "#{payMoreTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getReconciliationStatement() != null) {
            sql.VALUES("reconciliation_statement", "#{reconciliationStatement,jdbcType=VARCHAR}");
        }
        
        if (record.getCheckFlag() != null) {
            sql.VALUES("check_flag", "#{checkFlag,jdbcType=INTEGER}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    public String selectByExample(TElectronPaymentCriteria example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("id");
        } else {
            sql.SELECT("id");
        }
        sql.SELECT("park_id");
        sql.SELECT("create_date");
        sql.SELECT("temp_online_total");
        sql.SELECT("fix_online_actual_total");
        sql.SELECT("temp_qPassPay_Total");
        sql.SELECT("temp_PrePay_Total");
        sql.SELECT("weChat_PrePay_Total");
        sql.SELECT("alipay_PrePay_Total");
        sql.SELECT("third_PrePay_Total");
        sql.SELECT("monthly_weChat_Total");
        sql.SELECT("temp_unionPay_Total");
        sql.SELECT("temp_card_Total");
        sql.SELECT("temp_rights_Total");
        sql.SELECT("temp_weChat_Total");
        sql.SELECT("temp_alipay_Total");
        sql.SELECT("pay_less_Total");
        sql.SELECT("pay_more_Total");
        sql.SELECT("reconciliation_statement");
        sql.SELECT("check_flag");
        sql.FROM("t_electron_payment");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TElectronPayment record = (TElectronPayment) parameter.get("record");
        TElectronPaymentCriteria example = (TElectronPaymentCriteria) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("t_electron_payment");
        
        if (record.getId() != null) {
            sql.SET("id = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getParkId() != null) {
            sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("create_date = #{record.createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getTempOnlineTotal() != null) {
            sql.SET("temp_online_total = #{record.tempOnlineTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineActualTotal() != null) {
            sql.SET("fix_online_actual_total = #{record.fixOnlineActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempQpasspayTotal() != null) {
            sql.SET("temp_qPassPay_Total = #{record.tempQpasspayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPrepayTotal() != null) {
            sql.SET("temp_PrePay_Total = #{record.tempPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getWechatPrepayTotal() != null) {
            sql.SET("weChat_PrePay_Total = #{record.wechatPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayPrepayTotal() != null) {
            sql.SET("alipay_PrePay_Total = #{record.alipayPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getThirdPrepayTotal() != null) {
            sql.SET("third_PrePay_Total = #{record.thirdPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMonthlyWechatTotal() != null) {
            sql.SET("monthly_weChat_Total = #{record.monthlyWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempUnionpayTotal() != null) {
            sql.SET("temp_unionPay_Total = #{record.tempUnionpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCardTotal() != null) {
            sql.SET("temp_card_Total = #{record.tempCardTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempRightsTotal() != null) {
            sql.SET("temp_rights_Total = #{record.tempRightsTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempWechatTotal() != null) {
            sql.SET("temp_weChat_Total = #{record.tempWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempAlipayTotal() != null) {
            sql.SET("temp_alipay_Total = #{record.tempAlipayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getPayLessTotal() != null) {
            sql.SET("pay_less_Total = #{record.payLessTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getPayMoreTotal() != null) {
            sql.SET("pay_more_Total = #{record.payMoreTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getReconciliationStatement() != null) {
            sql.SET("reconciliation_statement = #{record.reconciliationStatement,jdbcType=VARCHAR}");
        }
        
        if (record.getCheckFlag() != null) {
            sql.SET("check_flag = #{record.checkFlag,jdbcType=INTEGER}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("t_electron_payment");
        
        sql.SET("id = #{record.id,jdbcType=INTEGER}");
        sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        sql.SET("create_date = #{record.createDate,jdbcType=VARCHAR}");
        sql.SET("temp_online_total = #{record.tempOnlineTotal,jdbcType=DOUBLE}");
        sql.SET("fix_online_actual_total = #{record.fixOnlineActualTotal,jdbcType=DOUBLE}");
        sql.SET("temp_qPassPay_Total = #{record.tempQpasspayTotal,jdbcType=DOUBLE}");
        sql.SET("temp_PrePay_Total = #{record.tempPrepayTotal,jdbcType=DOUBLE}");
        sql.SET("weChat_PrePay_Total = #{record.wechatPrepayTotal,jdbcType=DOUBLE}");
        sql.SET("alipay_PrePay_Total = #{record.alipayPrepayTotal,jdbcType=DOUBLE}");
        sql.SET("third_PrePay_Total = #{record.thirdPrepayTotal,jdbcType=DOUBLE}");
        sql.SET("monthly_weChat_Total = #{record.monthlyWechatTotal,jdbcType=DOUBLE}");
        sql.SET("temp_unionPay_Total = #{record.tempUnionpayTotal,jdbcType=DOUBLE}");
        sql.SET("temp_card_Total = #{record.tempCardTotal,jdbcType=DOUBLE}");
        sql.SET("temp_rights_Total = #{record.tempRightsTotal,jdbcType=DOUBLE}");
        sql.SET("temp_weChat_Total = #{record.tempWechatTotal,jdbcType=DOUBLE}");
        sql.SET("temp_alipay_Total = #{record.tempAlipayTotal,jdbcType=DOUBLE}");
        sql.SET("pay_less_Total = #{record.payLessTotal,jdbcType=DOUBLE}");
        sql.SET("pay_more_Total = #{record.payMoreTotal,jdbcType=DOUBLE}");
        sql.SET("reconciliation_statement = #{record.reconciliationStatement,jdbcType=VARCHAR}");
        sql.SET("check_flag = #{record.checkFlag,jdbcType=INTEGER}");
        
        TElectronPaymentCriteria example = (TElectronPaymentCriteria) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(TElectronPayment record) {
        SQL sql = new SQL();
        sql.UPDATE("t_electron_payment");
        
        if (record.getParkId() != null) {
            sql.SET("park_id = #{parkId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("create_date = #{createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getTempOnlineTotal() != null) {
            sql.SET("temp_online_total = #{tempOnlineTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineActualTotal() != null) {
            sql.SET("fix_online_actual_total = #{fixOnlineActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempQpasspayTotal() != null) {
            sql.SET("temp_qPassPay_Total = #{tempQpasspayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPrepayTotal() != null) {
            sql.SET("temp_PrePay_Total = #{tempPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getWechatPrepayTotal() != null) {
            sql.SET("weChat_PrePay_Total = #{wechatPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayPrepayTotal() != null) {
            sql.SET("alipay_PrePay_Total = #{alipayPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getThirdPrepayTotal() != null) {
            sql.SET("third_PrePay_Total = #{thirdPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMonthlyWechatTotal() != null) {
            sql.SET("monthly_weChat_Total = #{monthlyWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempUnionpayTotal() != null) {
            sql.SET("temp_unionPay_Total = #{tempUnionpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCardTotal() != null) {
            sql.SET("temp_card_Total = #{tempCardTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempRightsTotal() != null) {
            sql.SET("temp_rights_Total = #{tempRightsTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempWechatTotal() != null) {
            sql.SET("temp_weChat_Total = #{tempWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempAlipayTotal() != null) {
            sql.SET("temp_alipay_Total = #{tempAlipayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getPayLessTotal() != null) {
            sql.SET("pay_less_Total = #{payLessTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getPayMoreTotal() != null) {
            sql.SET("pay_more_Total = #{payMoreTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getReconciliationStatement() != null) {
            sql.SET("reconciliation_statement = #{reconciliationStatement,jdbcType=VARCHAR}");
        }
        
        if (record.getCheckFlag() != null) {
            sql.SET("check_flag = #{checkFlag,jdbcType=INTEGER}");
        }
        
        sql.WHERE("id = #{id,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_electron_payment
     *
     * @mbg.generated
     */
    protected void applyWhere(SQL sql, TElectronPaymentCriteria example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}