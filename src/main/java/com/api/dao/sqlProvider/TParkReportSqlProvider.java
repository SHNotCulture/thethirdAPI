package com.api.dao.sqlProvider;

import com.api.entity.TParkReport;
import com.api.entity.TParkReportCriteria;
import com.api.entity.TParkReportCriteria.Criteria;
import com.api.entity.TParkReportCriteria.Criterion;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class TParkReportSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    public String countByExample(TParkReportCriteria example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("t_park_report");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    public String deleteByExample(TParkReportCriteria example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("t_park_report");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    public String insertSelective(TParkReport record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("t_park_report");
        
        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getParkId() != null) {
            sql.VALUES("park_id", "#{parkId,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyId() != null) {
            sql.VALUES("company_id", "#{companyId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateDate() != null) {
            sql.VALUES("create_date", "#{createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getTempCashNeedTotal() != null) {
            sql.VALUES("temp_cash_need_total", "#{tempCashNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCashActualTotal() != null) {
            sql.VALUES("temp_cash_actual_total", "#{tempCashActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempOnlineNeedTotal() != null) {
            sql.VALUES("temp_online_need_total", "#{tempOnlineNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempOnlineTotal() != null) {
            sql.VALUES("temp_online_total", "#{tempOnlineTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixAdd() != null) {
            sql.VALUES("fix_add", "#{fixAdd,jdbcType=INTEGER}");
        }
        
        if (record.getFixCashNeedTotal() != null) {
            sql.VALUES("fix_cash_need_total", "#{fixCashNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixCashActualTotal() != null) {
            sql.VALUES("fix_cash_actual_total", "#{fixCashActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineNeedTotal() != null) {
            sql.VALUES("fix_online_need_total", "#{fixOnlineNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineActualTotal() != null) {
            sql.VALUES("fix_online_actual_total", "#{fixOnlineActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getCenterChargeTotal() != null) {
            sql.VALUES("center_charge_total", "#{centerChargeTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getBusinessCircleTotal() != null) {
            sql.VALUES("business_circle_total", "#{businessCircleTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFreeTotal() != null) {
            sql.VALUES("free_total", "#{freeTotal,jdbcType=INTEGER}");
        }
        
        if (record.getTempNeedpayTotal() != null) {
            sql.VALUES("temp_NeedPay_Total", "#{tempNeedpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempBehalfpayTotal() != null) {
            sql.VALUES("temp_BehalfPay_Total", "#{tempBehalfpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempQpasspayTotal() != null) {
            sql.VALUES("temp_qPassPay_Total", "#{tempQpasspayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPrepayTotal() != null) {
            sql.VALUES("temp_PrePay_Total", "#{tempPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPayDiff() != null) {
            sql.VALUES("temp_Pay_diff", "#{tempPayDiff,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCouponTotal() != null) {
            sql.VALUES("temp_coupon_Total", "#{tempCouponTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getWechatPrepayTotal() != null) {
            sql.VALUES("weChat_PrePay_Total", "#{wechatPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayPrepayTotal() != null) {
            sql.VALUES("alipay_PrePay_Total", "#{alipayPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getThirdPrepayTotal() != null) {
            sql.VALUES("third_PrePay_Total", "#{thirdPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMonthlyWechatTotal() != null) {
            sql.VALUES("monthly_weChat_Total", "#{monthlyWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempUnionpayTotal() != null) {
            sql.VALUES("temp_unionPay_Total", "#{tempUnionpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCardTotal() != null) {
            sql.VALUES("temp_card_Total", "#{tempCardTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempRightsTotal() != null) {
            sql.VALUES("temp_rights_Total", "#{tempRightsTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempWechatTotal() != null) {
            sql.VALUES("temp_weChat_Total", "#{tempWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempAlipayTotal() != null) {
            sql.VALUES("temp_alipay_Total", "#{tempAlipayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayCount() != null) {
            sql.VALUES("alipay_count", "#{alipayCount,jdbcType=INTEGER}");
        }
        
        if (record.getBehalfpayCount() != null) {
            sql.VALUES("behalfpay_count", "#{behalfpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getCashpayCount() != null) {
            sql.VALUES("cashpay_count", "#{cashpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getEtcpayCount() != null) {
            sql.VALUES("etcpay_count", "#{etcpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getLocalcouponpayCount() != null) {
            sql.VALUES("localcouponpay_count", "#{localcouponpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getNoconfirmCount() != null) {
            sql.VALUES("noconfirm_count", "#{noconfirmCount,jdbcType=INTEGER}");
        }
        
        if (record.getNoentryCount() != null) {
            sql.VALUES("noentry_count", "#{noentryCount,jdbcType=INTEGER}");
        }
        
        if (record.getPrepayCount() != null) {
            sql.VALUES("prepay_count", "#{prepayCount,jdbcType=INTEGER}");
        }
        
        if (record.getQpasspayCount() != null) {
            sql.VALUES("qpasspay_count", "#{qpasspayCount,jdbcType=INTEGER}");
        }
        
        if (record.getUnionpayCount() != null) {
            sql.VALUES("unionpay_count", "#{unionpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getWechatpayCount() != null) {
            sql.VALUES("wechatpay_count", "#{wechatpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getUpdateCarplateCount() != null) {
            sql.VALUES("update_carplate_count", "#{updateCarplateCount,jdbcType=INTEGER}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    public String selectByExample(TParkReportCriteria example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("id");
        } else {
            sql.SELECT("id");
        }
        sql.SELECT("park_id");
        sql.SELECT("company_id");
        sql.SELECT("create_date");
        sql.SELECT("temp_cash_need_total");
        sql.SELECT("temp_cash_actual_total");
        sql.SELECT("temp_online_need_total");
        sql.SELECT("temp_online_total");
        sql.SELECT("fix_add");
        sql.SELECT("fix_cash_need_total");
        sql.SELECT("fix_cash_actual_total");
        sql.SELECT("fix_online_need_total");
        sql.SELECT("fix_online_actual_total");
        sql.SELECT("center_charge_total");
        sql.SELECT("business_circle_total");
        sql.SELECT("free_total");
        sql.SELECT("temp_NeedPay_Total");
        sql.SELECT("temp_BehalfPay_Total");
        sql.SELECT("temp_qPassPay_Total");
        sql.SELECT("temp_PrePay_Total");
        sql.SELECT("temp_Pay_diff");
        sql.SELECT("temp_coupon_Total");
        sql.SELECT("weChat_PrePay_Total");
        sql.SELECT("alipay_PrePay_Total");
        sql.SELECT("third_PrePay_Total");
        sql.SELECT("monthly_weChat_Total");
        sql.SELECT("temp_unionPay_Total");
        sql.SELECT("temp_card_Total");
        sql.SELECT("temp_rights_Total");
        sql.SELECT("temp_weChat_Total");
        sql.SELECT("temp_alipay_Total");
        sql.SELECT("alipay_count");
        sql.SELECT("behalfpay_count");
        sql.SELECT("cashpay_count");
        sql.SELECT("etcpay_count");
        sql.SELECT("localcouponpay_count");
        sql.SELECT("noconfirm_count");
        sql.SELECT("noentry_count");
        sql.SELECT("prepay_count");
        sql.SELECT("qpasspay_count");
        sql.SELECT("unionpay_count");
        sql.SELECT("wechatpay_count");
        sql.SELECT("update_carplate_count");
        sql.FROM("t_park_report");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TParkReport record = (TParkReport) parameter.get("record");
        TParkReportCriteria example = (TParkReportCriteria) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("t_park_report");
        
        if (record.getId() != null) {
            sql.SET("id = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getParkId() != null) {
            sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyId() != null) {
            sql.SET("company_id = #{record.companyId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("create_date = #{record.createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getTempCashNeedTotal() != null) {
            sql.SET("temp_cash_need_total = #{record.tempCashNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCashActualTotal() != null) {
            sql.SET("temp_cash_actual_total = #{record.tempCashActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempOnlineNeedTotal() != null) {
            sql.SET("temp_online_need_total = #{record.tempOnlineNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempOnlineTotal() != null) {
            sql.SET("temp_online_total = #{record.tempOnlineTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixAdd() != null) {
            sql.SET("fix_add = #{record.fixAdd,jdbcType=INTEGER}");
        }
        
        if (record.getFixCashNeedTotal() != null) {
            sql.SET("fix_cash_need_total = #{record.fixCashNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixCashActualTotal() != null) {
            sql.SET("fix_cash_actual_total = #{record.fixCashActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineNeedTotal() != null) {
            sql.SET("fix_online_need_total = #{record.fixOnlineNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineActualTotal() != null) {
            sql.SET("fix_online_actual_total = #{record.fixOnlineActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getCenterChargeTotal() != null) {
            sql.SET("center_charge_total = #{record.centerChargeTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getBusinessCircleTotal() != null) {
            sql.SET("business_circle_total = #{record.businessCircleTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFreeTotal() != null) {
            sql.SET("free_total = #{record.freeTotal,jdbcType=INTEGER}");
        }
        
        if (record.getTempNeedpayTotal() != null) {
            sql.SET("temp_NeedPay_Total = #{record.tempNeedpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempBehalfpayTotal() != null) {
            sql.SET("temp_BehalfPay_Total = #{record.tempBehalfpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempQpasspayTotal() != null) {
            sql.SET("temp_qPassPay_Total = #{record.tempQpasspayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPrepayTotal() != null) {
            sql.SET("temp_PrePay_Total = #{record.tempPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPayDiff() != null) {
            sql.SET("temp_Pay_diff = #{record.tempPayDiff,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCouponTotal() != null) {
            sql.SET("temp_coupon_Total = #{record.tempCouponTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getWechatPrepayTotal() != null) {
            sql.SET("weChat_PrePay_Total = #{record.wechatPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayPrepayTotal() != null) {
            sql.SET("alipay_PrePay_Total = #{record.alipayPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getThirdPrepayTotal() != null) {
            sql.SET("third_PrePay_Total = #{record.thirdPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMonthlyWechatTotal() != null) {
            sql.SET("monthly_weChat_Total = #{record.monthlyWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempUnionpayTotal() != null) {
            sql.SET("temp_unionPay_Total = #{record.tempUnionpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCardTotal() != null) {
            sql.SET("temp_card_Total = #{record.tempCardTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempRightsTotal() != null) {
            sql.SET("temp_rights_Total = #{record.tempRightsTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempWechatTotal() != null) {
            sql.SET("temp_weChat_Total = #{record.tempWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempAlipayTotal() != null) {
            sql.SET("temp_alipay_Total = #{record.tempAlipayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayCount() != null) {
            sql.SET("alipay_count = #{record.alipayCount,jdbcType=INTEGER}");
        }
        
        if (record.getBehalfpayCount() != null) {
            sql.SET("behalfpay_count = #{record.behalfpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getCashpayCount() != null) {
            sql.SET("cashpay_count = #{record.cashpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getEtcpayCount() != null) {
            sql.SET("etcpay_count = #{record.etcpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getLocalcouponpayCount() != null) {
            sql.SET("localcouponpay_count = #{record.localcouponpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getNoconfirmCount() != null) {
            sql.SET("noconfirm_count = #{record.noconfirmCount,jdbcType=INTEGER}");
        }
        
        if (record.getNoentryCount() != null) {
            sql.SET("noentry_count = #{record.noentryCount,jdbcType=INTEGER}");
        }
        
        if (record.getPrepayCount() != null) {
            sql.SET("prepay_count = #{record.prepayCount,jdbcType=INTEGER}");
        }
        
        if (record.getQpasspayCount() != null) {
            sql.SET("qpasspay_count = #{record.qpasspayCount,jdbcType=INTEGER}");
        }
        
        if (record.getUnionpayCount() != null) {
            sql.SET("unionpay_count = #{record.unionpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getWechatpayCount() != null) {
            sql.SET("wechatpay_count = #{record.wechatpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getUpdateCarplateCount() != null) {
            sql.SET("update_carplate_count = #{record.updateCarplateCount,jdbcType=INTEGER}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("t_park_report");
        
        sql.SET("id = #{record.id,jdbcType=INTEGER}");
        sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        sql.SET("company_id = #{record.companyId,jdbcType=INTEGER}");
        sql.SET("create_date = #{record.createDate,jdbcType=VARCHAR}");
        sql.SET("temp_cash_need_total = #{record.tempCashNeedTotal,jdbcType=DOUBLE}");
        sql.SET("temp_cash_actual_total = #{record.tempCashActualTotal,jdbcType=DOUBLE}");
        sql.SET("temp_online_need_total = #{record.tempOnlineNeedTotal,jdbcType=DOUBLE}");
        sql.SET("temp_online_total = #{record.tempOnlineTotal,jdbcType=DOUBLE}");
        sql.SET("fix_add = #{record.fixAdd,jdbcType=INTEGER}");
        sql.SET("fix_cash_need_total = #{record.fixCashNeedTotal,jdbcType=DOUBLE}");
        sql.SET("fix_cash_actual_total = #{record.fixCashActualTotal,jdbcType=DOUBLE}");
        sql.SET("fix_online_need_total = #{record.fixOnlineNeedTotal,jdbcType=DOUBLE}");
        sql.SET("fix_online_actual_total = #{record.fixOnlineActualTotal,jdbcType=DOUBLE}");
        sql.SET("center_charge_total = #{record.centerChargeTotal,jdbcType=DOUBLE}");
        sql.SET("business_circle_total = #{record.businessCircleTotal,jdbcType=DOUBLE}");
        sql.SET("free_total = #{record.freeTotal,jdbcType=INTEGER}");
        sql.SET("temp_NeedPay_Total = #{record.tempNeedpayTotal,jdbcType=DOUBLE}");
        sql.SET("temp_BehalfPay_Total = #{record.tempBehalfpayTotal,jdbcType=DOUBLE}");
        sql.SET("temp_qPassPay_Total = #{record.tempQpasspayTotal,jdbcType=DOUBLE}");
        sql.SET("temp_PrePay_Total = #{record.tempPrepayTotal,jdbcType=DOUBLE}");
        sql.SET("temp_Pay_diff = #{record.tempPayDiff,jdbcType=DOUBLE}");
        sql.SET("temp_coupon_Total = #{record.tempCouponTotal,jdbcType=DOUBLE}");
        sql.SET("weChat_PrePay_Total = #{record.wechatPrepayTotal,jdbcType=DOUBLE}");
        sql.SET("alipay_PrePay_Total = #{record.alipayPrepayTotal,jdbcType=DOUBLE}");
        sql.SET("third_PrePay_Total = #{record.thirdPrepayTotal,jdbcType=DOUBLE}");
        sql.SET("monthly_weChat_Total = #{record.monthlyWechatTotal,jdbcType=DOUBLE}");
        sql.SET("temp_unionPay_Total = #{record.tempUnionpayTotal,jdbcType=DOUBLE}");
        sql.SET("temp_card_Total = #{record.tempCardTotal,jdbcType=DOUBLE}");
        sql.SET("temp_rights_Total = #{record.tempRightsTotal,jdbcType=DOUBLE}");
        sql.SET("temp_weChat_Total = #{record.tempWechatTotal,jdbcType=DOUBLE}");
        sql.SET("temp_alipay_Total = #{record.tempAlipayTotal,jdbcType=DOUBLE}");
        sql.SET("alipay_count = #{record.alipayCount,jdbcType=INTEGER}");
        sql.SET("behalfpay_count = #{record.behalfpayCount,jdbcType=INTEGER}");
        sql.SET("cashpay_count = #{record.cashpayCount,jdbcType=INTEGER}");
        sql.SET("etcpay_count = #{record.etcpayCount,jdbcType=INTEGER}");
        sql.SET("localcouponpay_count = #{record.localcouponpayCount,jdbcType=INTEGER}");
        sql.SET("noconfirm_count = #{record.noconfirmCount,jdbcType=INTEGER}");
        sql.SET("noentry_count = #{record.noentryCount,jdbcType=INTEGER}");
        sql.SET("prepay_count = #{record.prepayCount,jdbcType=INTEGER}");
        sql.SET("qpasspay_count = #{record.qpasspayCount,jdbcType=INTEGER}");
        sql.SET("unionpay_count = #{record.unionpayCount,jdbcType=INTEGER}");
        sql.SET("wechatpay_count = #{record.wechatpayCount,jdbcType=INTEGER}");
        sql.SET("update_carplate_count = #{record.updateCarplateCount,jdbcType=INTEGER}");
        
        TParkReportCriteria example = (TParkReportCriteria) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(TParkReport record) {
        SQL sql = new SQL();
        sql.UPDATE("t_park_report");
        
        if (record.getParkId() != null) {
            sql.SET("park_id = #{parkId,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyId() != null) {
            sql.SET("company_id = #{companyId,jdbcType=INTEGER}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("create_date = #{createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getTempCashNeedTotal() != null) {
            sql.SET("temp_cash_need_total = #{tempCashNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCashActualTotal() != null) {
            sql.SET("temp_cash_actual_total = #{tempCashActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempOnlineNeedTotal() != null) {
            sql.SET("temp_online_need_total = #{tempOnlineNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempOnlineTotal() != null) {
            sql.SET("temp_online_total = #{tempOnlineTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixAdd() != null) {
            sql.SET("fix_add = #{fixAdd,jdbcType=INTEGER}");
        }
        
        if (record.getFixCashNeedTotal() != null) {
            sql.SET("fix_cash_need_total = #{fixCashNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixCashActualTotal() != null) {
            sql.SET("fix_cash_actual_total = #{fixCashActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineNeedTotal() != null) {
            sql.SET("fix_online_need_total = #{fixOnlineNeedTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFixOnlineActualTotal() != null) {
            sql.SET("fix_online_actual_total = #{fixOnlineActualTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getCenterChargeTotal() != null) {
            sql.SET("center_charge_total = #{centerChargeTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getBusinessCircleTotal() != null) {
            sql.SET("business_circle_total = #{businessCircleTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getFreeTotal() != null) {
            sql.SET("free_total = #{freeTotal,jdbcType=INTEGER}");
        }
        
        if (record.getTempNeedpayTotal() != null) {
            sql.SET("temp_NeedPay_Total = #{tempNeedpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempBehalfpayTotal() != null) {
            sql.SET("temp_BehalfPay_Total = #{tempBehalfpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempQpasspayTotal() != null) {
            sql.SET("temp_qPassPay_Total = #{tempQpasspayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPrepayTotal() != null) {
            sql.SET("temp_PrePay_Total = #{tempPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempPayDiff() != null) {
            sql.SET("temp_Pay_diff = #{tempPayDiff,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCouponTotal() != null) {
            sql.SET("temp_coupon_Total = #{tempCouponTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getWechatPrepayTotal() != null) {
            sql.SET("weChat_PrePay_Total = #{wechatPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayPrepayTotal() != null) {
            sql.SET("alipay_PrePay_Total = #{alipayPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getThirdPrepayTotal() != null) {
            sql.SET("third_PrePay_Total = #{thirdPrepayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMonthlyWechatTotal() != null) {
            sql.SET("monthly_weChat_Total = #{monthlyWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempUnionpayTotal() != null) {
            sql.SET("temp_unionPay_Total = #{tempUnionpayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempCardTotal() != null) {
            sql.SET("temp_card_Total = #{tempCardTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempRightsTotal() != null) {
            sql.SET("temp_rights_Total = #{tempRightsTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempWechatTotal() != null) {
            sql.SET("temp_weChat_Total = #{tempWechatTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getTempAlipayTotal() != null) {
            sql.SET("temp_alipay_Total = #{tempAlipayTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAlipayCount() != null) {
            sql.SET("alipay_count = #{alipayCount,jdbcType=INTEGER}");
        }
        
        if (record.getBehalfpayCount() != null) {
            sql.SET("behalfpay_count = #{behalfpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getCashpayCount() != null) {
            sql.SET("cashpay_count = #{cashpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getEtcpayCount() != null) {
            sql.SET("etcpay_count = #{etcpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getLocalcouponpayCount() != null) {
            sql.SET("localcouponpay_count = #{localcouponpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getNoconfirmCount() != null) {
            sql.SET("noconfirm_count = #{noconfirmCount,jdbcType=INTEGER}");
        }
        
        if (record.getNoentryCount() != null) {
            sql.SET("noentry_count = #{noentryCount,jdbcType=INTEGER}");
        }
        
        if (record.getPrepayCount() != null) {
            sql.SET("prepay_count = #{prepayCount,jdbcType=INTEGER}");
        }
        
        if (record.getQpasspayCount() != null) {
            sql.SET("qpasspay_count = #{qpasspayCount,jdbcType=INTEGER}");
        }
        
        if (record.getUnionpayCount() != null) {
            sql.SET("unionpay_count = #{unionpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getWechatpayCount() != null) {
            sql.SET("wechatpay_count = #{wechatpayCount,jdbcType=INTEGER}");
        }
        
        if (record.getUpdateCarplateCount() != null) {
            sql.SET("update_carplate_count = #{updateCarplateCount,jdbcType=INTEGER}");
        }
        
        sql.WHERE("id = #{id,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_report
     *
     * @mbg.generated
     */
    protected void applyWhere(SQL sql, TParkReportCriteria example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}