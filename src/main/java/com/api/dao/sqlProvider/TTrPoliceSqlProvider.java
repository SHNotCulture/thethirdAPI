package com.api.dao.sqlProvider;

import com.api.entity.TTrPolice;
import com.api.entity.TTrPoliceCriteria;
import com.api.entity.TTrPoliceCriteria.Criteria;
import com.api.entity.TTrPoliceCriteria.Criterion;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class TTrPoliceSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_tr_police
     *
     * @mbg.generated
     */
    public String countByExample(TTrPoliceCriteria example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("t_tr_police");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_tr_police
     *
     * @mbg.generated
     */
    public String deleteByExample(TTrPoliceCriteria example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("t_tr_police");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_tr_police
     *
     * @mbg.generated
     */
    public String insertSelective(TTrPolice record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("t_tr_police");
        
        if (record.getParkId() != null) {
            sql.VALUES("park_id", "#{parkId,jdbcType=INTEGER}");
        }
        
        if (record.getGgSsjgbm1() != null) {
            sql.VALUES("gg_ssjgbm_1", "#{ggSsjgbm1,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm1Mc() != null) {
            sql.VALUES("gg_ssjgbm_1_mc", "#{ggSsjgbm1Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm2() != null) {
            sql.VALUES("gg_ssjgbm_2", "#{ggSsjgbm2,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm2Mc() != null) {
            sql.VALUES("gg_ssjgbm_2_mc", "#{ggSsjgbm2Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getxZb() != null) {
            sql.VALUES("x_zb", "#{xZb,jdbcType=VARCHAR}");
        }
        
        if (record.getyZb() != null) {
            sql.VALUES("y_zb", "#{yZb,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm3() != null) {
            sql.VALUES("gg_ssjgbm_3", "#{ggSsjgbm3,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm3Mc() != null) {
            sql.VALUES("gg_ssjgbm_3_mc", "#{ggSsjgbm3Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getLxdh() != null) {
            sql.VALUES("lxdh", "#{lxdh,jdbcType=VARCHAR}");
        }
        
        if (record.getLxr() != null) {
            sql.VALUES("lxr", "#{lxr,jdbcType=VARCHAR}");
        }
        
        if (record.getChpys() != null) {
            sql.VALUES("chpys", "#{chpys,jdbcType=VARCHAR}");
        }
        
        if (record.getChllx() != null) {
            sql.VALUES("chllx", "#{chllx,jdbcType=VARCHAR}");
        }
        
        if (record.getDjrXm() != null) {
            sql.VALUES("djr_xm", "#{djrXm,jdbcType=VARCHAR}");
        }
        
        if (record.getCjr() != null) {
            sql.VALUES("cjr", "#{cjr,jdbcType=VARCHAR}");
        }
        
        if (record.getHylxdm() != null) {
            sql.VALUES("hylxdm", "#{hylxdm,jdbcType=VARCHAR}");
        }
        
        if (record.getHylx() != null) {
            sql.VALUES("hylx", "#{hylx,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_tr_police
     *
     * @mbg.generated
     */
    public String selectByExample(TTrPoliceCriteria example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("park_id");
        } else {
            sql.SELECT("park_id");
        }
        sql.SELECT("gg_ssjgbm_1");
        sql.SELECT("gg_ssjgbm_1_mc");
        sql.SELECT("gg_ssjgbm_2");
        sql.SELECT("gg_ssjgbm_2_mc");
        sql.SELECT("x_zb");
        sql.SELECT("y_zb");
        sql.SELECT("gg_ssjgbm_3");
        sql.SELECT("gg_ssjgbm_3_mc");
        sql.SELECT("lxdh");
        sql.SELECT("lxr");
        sql.SELECT("chpys");
        sql.SELECT("chllx");
        sql.SELECT("djr_xm");
        sql.SELECT("cjr");
        sql.SELECT("hylxdm");
        sql.SELECT("hylx");
        sql.FROM("t_tr_police");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_tr_police
     *
     * @mbg.generated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TTrPolice record = (TTrPolice) parameter.get("record");
        TTrPoliceCriteria example = (TTrPoliceCriteria) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("t_tr_police");
        
        if (record.getParkId() != null) {
            sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        }
        
        if (record.getGgSsjgbm1() != null) {
            sql.SET("gg_ssjgbm_1 = #{record.ggSsjgbm1,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm1Mc() != null) {
            sql.SET("gg_ssjgbm_1_mc = #{record.ggSsjgbm1Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm2() != null) {
            sql.SET("gg_ssjgbm_2 = #{record.ggSsjgbm2,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm2Mc() != null) {
            sql.SET("gg_ssjgbm_2_mc = #{record.ggSsjgbm2Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getxZb() != null) {
            sql.SET("x_zb = #{record.xZb,jdbcType=VARCHAR}");
        }
        
        if (record.getyZb() != null) {
            sql.SET("y_zb = #{record.yZb,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm3() != null) {
            sql.SET("gg_ssjgbm_3 = #{record.ggSsjgbm3,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm3Mc() != null) {
            sql.SET("gg_ssjgbm_3_mc = #{record.ggSsjgbm3Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getLxdh() != null) {
            sql.SET("lxdh = #{record.lxdh,jdbcType=VARCHAR}");
        }
        
        if (record.getLxr() != null) {
            sql.SET("lxr = #{record.lxr,jdbcType=VARCHAR}");
        }
        
        if (record.getChpys() != null) {
            sql.SET("chpys = #{record.chpys,jdbcType=VARCHAR}");
        }
        
        if (record.getChllx() != null) {
            sql.SET("chllx = #{record.chllx,jdbcType=VARCHAR}");
        }
        
        if (record.getDjrXm() != null) {
            sql.SET("djr_xm = #{record.djrXm,jdbcType=VARCHAR}");
        }
        
        if (record.getCjr() != null) {
            sql.SET("cjr = #{record.cjr,jdbcType=VARCHAR}");
        }
        
        if (record.getHylxdm() != null) {
            sql.SET("hylxdm = #{record.hylxdm,jdbcType=VARCHAR}");
        }
        
        if (record.getHylx() != null) {
            sql.SET("hylx = #{record.hylx,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_tr_police
     *
     * @mbg.generated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("t_tr_police");
        
        sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        sql.SET("gg_ssjgbm_1 = #{record.ggSsjgbm1,jdbcType=VARCHAR}");
        sql.SET("gg_ssjgbm_1_mc = #{record.ggSsjgbm1Mc,jdbcType=VARCHAR}");
        sql.SET("gg_ssjgbm_2 = #{record.ggSsjgbm2,jdbcType=VARCHAR}");
        sql.SET("gg_ssjgbm_2_mc = #{record.ggSsjgbm2Mc,jdbcType=VARCHAR}");
        sql.SET("x_zb = #{record.xZb,jdbcType=VARCHAR}");
        sql.SET("y_zb = #{record.yZb,jdbcType=VARCHAR}");
        sql.SET("gg_ssjgbm_3 = #{record.ggSsjgbm3,jdbcType=VARCHAR}");
        sql.SET("gg_ssjgbm_3_mc = #{record.ggSsjgbm3Mc,jdbcType=VARCHAR}");
        sql.SET("lxdh = #{record.lxdh,jdbcType=VARCHAR}");
        sql.SET("lxr = #{record.lxr,jdbcType=VARCHAR}");
        sql.SET("chpys = #{record.chpys,jdbcType=VARCHAR}");
        sql.SET("chllx = #{record.chllx,jdbcType=VARCHAR}");
        sql.SET("djr_xm = #{record.djrXm,jdbcType=VARCHAR}");
        sql.SET("cjr = #{record.cjr,jdbcType=VARCHAR}");
        sql.SET("hylxdm = #{record.hylxdm,jdbcType=VARCHAR}");
        sql.SET("hylx = #{record.hylx,jdbcType=VARCHAR}");
        
        TTrPoliceCriteria example = (TTrPoliceCriteria) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_tr_police
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(TTrPolice record) {
        SQL sql = new SQL();
        sql.UPDATE("t_tr_police");
        
        if (record.getGgSsjgbm1() != null) {
            sql.SET("gg_ssjgbm_1 = #{ggSsjgbm1,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm1Mc() != null) {
            sql.SET("gg_ssjgbm_1_mc = #{ggSsjgbm1Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm2() != null) {
            sql.SET("gg_ssjgbm_2 = #{ggSsjgbm2,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm2Mc() != null) {
            sql.SET("gg_ssjgbm_2_mc = #{ggSsjgbm2Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getxZb() != null) {
            sql.SET("x_zb = #{xZb,jdbcType=VARCHAR}");
        }
        
        if (record.getyZb() != null) {
            sql.SET("y_zb = #{yZb,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm3() != null) {
            sql.SET("gg_ssjgbm_3 = #{ggSsjgbm3,jdbcType=VARCHAR}");
        }
        
        if (record.getGgSsjgbm3Mc() != null) {
            sql.SET("gg_ssjgbm_3_mc = #{ggSsjgbm3Mc,jdbcType=VARCHAR}");
        }
        
        if (record.getLxdh() != null) {
            sql.SET("lxdh = #{lxdh,jdbcType=VARCHAR}");
        }
        
        if (record.getLxr() != null) {
            sql.SET("lxr = #{lxr,jdbcType=VARCHAR}");
        }
        
        if (record.getChpys() != null) {
            sql.SET("chpys = #{chpys,jdbcType=VARCHAR}");
        }
        
        if (record.getChllx() != null) {
            sql.SET("chllx = #{chllx,jdbcType=VARCHAR}");
        }
        
        if (record.getDjrXm() != null) {
            sql.SET("djr_xm = #{djrXm,jdbcType=VARCHAR}");
        }
        
        if (record.getCjr() != null) {
            sql.SET("cjr = #{cjr,jdbcType=VARCHAR}");
        }
        
        if (record.getHylxdm() != null) {
            sql.SET("hylxdm = #{hylxdm,jdbcType=VARCHAR}");
        }
        
        if (record.getHylx() != null) {
            sql.SET("hylx = #{hylx,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("park_id = #{parkId,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_tr_police
     *
     * @mbg.generated
     */
    protected void applyWhere(SQL sql, TTrPoliceCriteria example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}