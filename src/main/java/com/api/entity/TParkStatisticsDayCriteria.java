package com.api.entity;

import java.util.ArrayList;
import java.util.List;

public class TParkStatisticsDayCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public TParkStatisticsDayCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andParkIdIsNull() {
            addCriterion("park_id is null");
            return (Criteria) this;
        }

        public Criteria andParkIdIsNotNull() {
            addCriterion("park_id is not null");
            return (Criteria) this;
        }

        public Criteria andParkIdEqualTo(Integer value) {
            addCriterion("park_id =", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotEqualTo(Integer value) {
            addCriterion("park_id <>", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdGreaterThan(Integer value) {
            addCriterion("park_id >", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("park_id >=", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdLessThan(Integer value) {
            addCriterion("park_id <", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdLessThanOrEqualTo(Integer value) {
            addCriterion("park_id <=", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdIn(List<Integer> values) {
            addCriterion("park_id in", values, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotIn(List<Integer> values) {
            addCriterion("park_id not in", values, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdBetween(Integer value1, Integer value2) {
            addCriterion("park_id between", value1, value2, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotBetween(Integer value1, Integer value2) {
            addCriterion("park_id not between", value1, value2, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkNameIsNull() {
            addCriterion("park_name is null");
            return (Criteria) this;
        }

        public Criteria andParkNameIsNotNull() {
            addCriterion("park_name is not null");
            return (Criteria) this;
        }

        public Criteria andParkNameEqualTo(String value) {
            addCriterion("park_name =", value, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameNotEqualTo(String value) {
            addCriterion("park_name <>", value, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameGreaterThan(String value) {
            addCriterion("park_name >", value, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameGreaterThanOrEqualTo(String value) {
            addCriterion("park_name >=", value, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameLessThan(String value) {
            addCriterion("park_name <", value, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameLessThanOrEqualTo(String value) {
            addCriterion("park_name <=", value, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameLike(String value) {
            addCriterion("park_name like", value, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameNotLike(String value) {
            addCriterion("park_name not like", value, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameIn(List<String> values) {
            addCriterion("park_name in", values, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameNotIn(List<String> values) {
            addCriterion("park_name not in", values, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameBetween(String value1, String value2) {
            addCriterion("park_name between", value1, value2, "parkName");
            return (Criteria) this;
        }

        public Criteria andParkNameNotBetween(String value1, String value2) {
            addCriterion("park_name not between", value1, value2, "parkName");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeIsNull() {
            addCriterion("statistic_time is null");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeIsNotNull() {
            addCriterion("statistic_time is not null");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeEqualTo(String value) {
            addCriterion("statistic_time =", value, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeNotEqualTo(String value) {
            addCriterion("statistic_time <>", value, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeGreaterThan(String value) {
            addCriterion("statistic_time >", value, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeGreaterThanOrEqualTo(String value) {
            addCriterion("statistic_time >=", value, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeLessThan(String value) {
            addCriterion("statistic_time <", value, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeLessThanOrEqualTo(String value) {
            addCriterion("statistic_time <=", value, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeLike(String value) {
            addCriterion("statistic_time like", value, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeNotLike(String value) {
            addCriterion("statistic_time not like", value, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeIn(List<String> values) {
            addCriterion("statistic_time in", values, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeNotIn(List<String> values) {
            addCriterion("statistic_time not in", values, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeBetween(String value1, String value2) {
            addCriterion("statistic_time between", value1, value2, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andStatisticTimeNotBetween(String value1, String value2) {
            addCriterion("statistic_time not between", value1, value2, "statisticTime");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowIsNull() {
            addCriterion("entrance_flow is null");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowIsNotNull() {
            addCriterion("entrance_flow is not null");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowEqualTo(Integer value) {
            addCriterion("entrance_flow =", value, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowNotEqualTo(Integer value) {
            addCriterion("entrance_flow <>", value, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowGreaterThan(Integer value) {
            addCriterion("entrance_flow >", value, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowGreaterThanOrEqualTo(Integer value) {
            addCriterion("entrance_flow >=", value, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowLessThan(Integer value) {
            addCriterion("entrance_flow <", value, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowLessThanOrEqualTo(Integer value) {
            addCriterion("entrance_flow <=", value, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowIn(List<Integer> values) {
            addCriterion("entrance_flow in", values, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowNotIn(List<Integer> values) {
            addCriterion("entrance_flow not in", values, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowBetween(Integer value1, Integer value2) {
            addCriterion("entrance_flow between", value1, value2, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowNotBetween(Integer value1, Integer value2) {
            addCriterion("entrance_flow not between", value1, value2, "entranceFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowIsNull() {
            addCriterion("outbound_flow is null");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowIsNotNull() {
            addCriterion("outbound_flow is not null");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowEqualTo(Integer value) {
            addCriterion("outbound_flow =", value, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowNotEqualTo(Integer value) {
            addCriterion("outbound_flow <>", value, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowGreaterThan(Integer value) {
            addCriterion("outbound_flow >", value, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowGreaterThanOrEqualTo(Integer value) {
            addCriterion("outbound_flow >=", value, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowLessThan(Integer value) {
            addCriterion("outbound_flow <", value, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowLessThanOrEqualTo(Integer value) {
            addCriterion("outbound_flow <=", value, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowIn(List<Integer> values) {
            addCriterion("outbound_flow in", values, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowNotIn(List<Integer> values) {
            addCriterion("outbound_flow not in", values, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowBetween(Integer value1, Integer value2) {
            addCriterion("outbound_flow between", value1, value2, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowNotBetween(Integer value1, Integer value2) {
            addCriterion("outbound_flow not between", value1, value2, "outboundFlow");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeIsNull() {
            addCriterion("totalPayFee is null");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeIsNotNull() {
            addCriterion("totalPayFee is not null");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeEqualTo(Double value) {
            addCriterion("totalPayFee =", value, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeNotEqualTo(Double value) {
            addCriterion("totalPayFee <>", value, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeGreaterThan(Double value) {
            addCriterion("totalPayFee >", value, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("totalPayFee >=", value, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeLessThan(Double value) {
            addCriterion("totalPayFee <", value, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeLessThanOrEqualTo(Double value) {
            addCriterion("totalPayFee <=", value, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeIn(List<Double> values) {
            addCriterion("totalPayFee in", values, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeNotIn(List<Double> values) {
            addCriterion("totalPayFee not in", values, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeBetween(Double value1, Double value2) {
            addCriterion("totalPayFee between", value1, value2, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpayfeeNotBetween(Double value1, Double value2) {
            addCriterion("totalPayFee not between", value1, value2, "totalpayfee");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumIsNull() {
            addCriterion("totalPayNum is null");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumIsNotNull() {
            addCriterion("totalPayNum is not null");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumEqualTo(Integer value) {
            addCriterion("totalPayNum =", value, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumNotEqualTo(Integer value) {
            addCriterion("totalPayNum <>", value, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumGreaterThan(Integer value) {
            addCriterion("totalPayNum >", value, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumGreaterThanOrEqualTo(Integer value) {
            addCriterion("totalPayNum >=", value, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumLessThan(Integer value) {
            addCriterion("totalPayNum <", value, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumLessThanOrEqualTo(Integer value) {
            addCriterion("totalPayNum <=", value, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumIn(List<Integer> values) {
            addCriterion("totalPayNum in", values, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumNotIn(List<Integer> values) {
            addCriterion("totalPayNum not in", values, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumBetween(Integer value1, Integer value2) {
            addCriterion("totalPayNum between", value1, value2, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andTotalpaynumNotBetween(Integer value1, Integer value2) {
            addCriterion("totalPayNum not between", value1, value2, "totalpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeIsNull() {
            addCriterion("unionPayFee is null");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeIsNotNull() {
            addCriterion("unionPayFee is not null");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeEqualTo(Double value) {
            addCriterion("unionPayFee =", value, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeNotEqualTo(Double value) {
            addCriterion("unionPayFee <>", value, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeGreaterThan(Double value) {
            addCriterion("unionPayFee >", value, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("unionPayFee >=", value, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeLessThan(Double value) {
            addCriterion("unionPayFee <", value, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeLessThanOrEqualTo(Double value) {
            addCriterion("unionPayFee <=", value, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeIn(List<Double> values) {
            addCriterion("unionPayFee in", values, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeNotIn(List<Double> values) {
            addCriterion("unionPayFee not in", values, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeBetween(Double value1, Double value2) {
            addCriterion("unionPayFee between", value1, value2, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayfeeNotBetween(Double value1, Double value2) {
            addCriterion("unionPayFee not between", value1, value2, "unionpayfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumIsNull() {
            addCriterion("unionPayNum is null");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumIsNotNull() {
            addCriterion("unionPayNum is not null");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumEqualTo(Integer value) {
            addCriterion("unionPayNum =", value, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumNotEqualTo(Integer value) {
            addCriterion("unionPayNum <>", value, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumGreaterThan(Integer value) {
            addCriterion("unionPayNum >", value, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumGreaterThanOrEqualTo(Integer value) {
            addCriterion("unionPayNum >=", value, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumLessThan(Integer value) {
            addCriterion("unionPayNum <", value, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumLessThanOrEqualTo(Integer value) {
            addCriterion("unionPayNum <=", value, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumIn(List<Integer> values) {
            addCriterion("unionPayNum in", values, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumNotIn(List<Integer> values) {
            addCriterion("unionPayNum not in", values, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumBetween(Integer value1, Integer value2) {
            addCriterion("unionPayNum between", value1, value2, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpaynumNotBetween(Integer value1, Integer value2) {
            addCriterion("unionPayNum not between", value1, value2, "unionpaynum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeIsNull() {
            addCriterion("unionPayQRFee is null");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeIsNotNull() {
            addCriterion("unionPayQRFee is not null");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeEqualTo(Double value) {
            addCriterion("unionPayQRFee =", value, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeNotEqualTo(Double value) {
            addCriterion("unionPayQRFee <>", value, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeGreaterThan(Double value) {
            addCriterion("unionPayQRFee >", value, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("unionPayQRFee >=", value, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeLessThan(Double value) {
            addCriterion("unionPayQRFee <", value, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeLessThanOrEqualTo(Double value) {
            addCriterion("unionPayQRFee <=", value, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeIn(List<Double> values) {
            addCriterion("unionPayQRFee in", values, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeNotIn(List<Double> values) {
            addCriterion("unionPayQRFee not in", values, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeBetween(Double value1, Double value2) {
            addCriterion("unionPayQRFee between", value1, value2, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrfeeNotBetween(Double value1, Double value2) {
            addCriterion("unionPayQRFee not between", value1, value2, "unionpayqrfee");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumIsNull() {
            addCriterion("unionPayQRNum is null");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumIsNotNull() {
            addCriterion("unionPayQRNum is not null");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumEqualTo(Integer value) {
            addCriterion("unionPayQRNum =", value, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumNotEqualTo(Integer value) {
            addCriterion("unionPayQRNum <>", value, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumGreaterThan(Integer value) {
            addCriterion("unionPayQRNum >", value, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("unionPayQRNum >=", value, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumLessThan(Integer value) {
            addCriterion("unionPayQRNum <", value, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumLessThanOrEqualTo(Integer value) {
            addCriterion("unionPayQRNum <=", value, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumIn(List<Integer> values) {
            addCriterion("unionPayQRNum in", values, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumNotIn(List<Integer> values) {
            addCriterion("unionPayQRNum not in", values, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumBetween(Integer value1, Integer value2) {
            addCriterion("unionPayQRNum between", value1, value2, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpayqrnumNotBetween(Integer value1, Integer value2) {
            addCriterion("unionPayQRNum not between", value1, value2, "unionpayqrnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeIsNull() {
            addCriterion("unionPayPassFee is null");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeIsNotNull() {
            addCriterion("unionPayPassFee is not null");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeEqualTo(Double value) {
            addCriterion("unionPayPassFee =", value, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeNotEqualTo(Double value) {
            addCriterion("unionPayPassFee <>", value, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeGreaterThan(Double value) {
            addCriterion("unionPayPassFee >", value, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("unionPayPassFee >=", value, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeLessThan(Double value) {
            addCriterion("unionPayPassFee <", value, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeLessThanOrEqualTo(Double value) {
            addCriterion("unionPayPassFee <=", value, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeIn(List<Double> values) {
            addCriterion("unionPayPassFee in", values, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeNotIn(List<Double> values) {
            addCriterion("unionPayPassFee not in", values, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeBetween(Double value1, Double value2) {
            addCriterion("unionPayPassFee between", value1, value2, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassfeeNotBetween(Double value1, Double value2) {
            addCriterion("unionPayPassFee not between", value1, value2, "unionpaypassfee");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumIsNull() {
            addCriterion("unionPayPassNum is null");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumIsNotNull() {
            addCriterion("unionPayPassNum is not null");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumEqualTo(Integer value) {
            addCriterion("unionPayPassNum =", value, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumNotEqualTo(Integer value) {
            addCriterion("unionPayPassNum <>", value, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumGreaterThan(Integer value) {
            addCriterion("unionPayPassNum >", value, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("unionPayPassNum >=", value, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumLessThan(Integer value) {
            addCriterion("unionPayPassNum <", value, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumLessThanOrEqualTo(Integer value) {
            addCriterion("unionPayPassNum <=", value, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumIn(List<Integer> values) {
            addCriterion("unionPayPassNum in", values, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumNotIn(List<Integer> values) {
            addCriterion("unionPayPassNum not in", values, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumBetween(Integer value1, Integer value2) {
            addCriterion("unionPayPassNum between", value1, value2, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andUnionpaypassnumNotBetween(Integer value1, Integer value2) {
            addCriterion("unionPayPassNum not between", value1, value2, "unionpaypassnum");
            return (Criteria) this;
        }

        public Criteria andCloudfeeIsNull() {
            addCriterion("cloudFee is null");
            return (Criteria) this;
        }

        public Criteria andCloudfeeIsNotNull() {
            addCriterion("cloudFee is not null");
            return (Criteria) this;
        }

        public Criteria andCloudfeeEqualTo(Double value) {
            addCriterion("cloudFee =", value, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeNotEqualTo(Double value) {
            addCriterion("cloudFee <>", value, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeGreaterThan(Double value) {
            addCriterion("cloudFee >", value, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("cloudFee >=", value, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeLessThan(Double value) {
            addCriterion("cloudFee <", value, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeLessThanOrEqualTo(Double value) {
            addCriterion("cloudFee <=", value, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeIn(List<Double> values) {
            addCriterion("cloudFee in", values, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeNotIn(List<Double> values) {
            addCriterion("cloudFee not in", values, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeBetween(Double value1, Double value2) {
            addCriterion("cloudFee between", value1, value2, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudfeeNotBetween(Double value1, Double value2) {
            addCriterion("cloudFee not between", value1, value2, "cloudfee");
            return (Criteria) this;
        }

        public Criteria andCloudnumIsNull() {
            addCriterion("cloudNum is null");
            return (Criteria) this;
        }

        public Criteria andCloudnumIsNotNull() {
            addCriterion("cloudNum is not null");
            return (Criteria) this;
        }

        public Criteria andCloudnumEqualTo(Integer value) {
            addCriterion("cloudNum =", value, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumNotEqualTo(Integer value) {
            addCriterion("cloudNum <>", value, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumGreaterThan(Integer value) {
            addCriterion("cloudNum >", value, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("cloudNum >=", value, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumLessThan(Integer value) {
            addCriterion("cloudNum <", value, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumLessThanOrEqualTo(Integer value) {
            addCriterion("cloudNum <=", value, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumIn(List<Integer> values) {
            addCriterion("cloudNum in", values, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumNotIn(List<Integer> values) {
            addCriterion("cloudNum not in", values, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumBetween(Integer value1, Integer value2) {
            addCriterion("cloudNum between", value1, value2, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andCloudnumNotBetween(Integer value1, Integer value2) {
            addCriterion("cloudNum not between", value1, value2, "cloudnum");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsIsNull() {
            addCriterion("annual_goals is null");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsIsNotNull() {
            addCriterion("annual_goals is not null");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsEqualTo(Integer value) {
            addCriterion("annual_goals =", value, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsNotEqualTo(Integer value) {
            addCriterion("annual_goals <>", value, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsGreaterThan(Integer value) {
            addCriterion("annual_goals >", value, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsGreaterThanOrEqualTo(Integer value) {
            addCriterion("annual_goals >=", value, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsLessThan(Integer value) {
            addCriterion("annual_goals <", value, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsLessThanOrEqualTo(Integer value) {
            addCriterion("annual_goals <=", value, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsIn(List<Integer> values) {
            addCriterion("annual_goals in", values, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsNotIn(List<Integer> values) {
            addCriterion("annual_goals not in", values, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsBetween(Integer value1, Integer value2) {
            addCriterion("annual_goals between", value1, value2, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andAnnualGoalsNotBetween(Integer value1, Integer value2) {
            addCriterion("annual_goals not between", value1, value2, "annualGoals");
            return (Criteria) this;
        }

        public Criteria andPriceAveIsNull() {
            addCriterion("price_ave is null");
            return (Criteria) this;
        }

        public Criteria andPriceAveIsNotNull() {
            addCriterion("price_ave is not null");
            return (Criteria) this;
        }

        public Criteria andPriceAveEqualTo(Double value) {
            addCriterion("price_ave =", value, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveNotEqualTo(Double value) {
            addCriterion("price_ave <>", value, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveGreaterThan(Double value) {
            addCriterion("price_ave >", value, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveGreaterThanOrEqualTo(Double value) {
            addCriterion("price_ave >=", value, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveLessThan(Double value) {
            addCriterion("price_ave <", value, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveLessThanOrEqualTo(Double value) {
            addCriterion("price_ave <=", value, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveIn(List<Double> values) {
            addCriterion("price_ave in", values, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveNotIn(List<Double> values) {
            addCriterion("price_ave not in", values, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveBetween(Double value1, Double value2) {
            addCriterion("price_ave between", value1, value2, "priceAve");
            return (Criteria) this;
        }

        public Criteria andPriceAveNotBetween(Double value1, Double value2) {
            addCriterion("price_ave not between", value1, value2, "priceAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveIsNull() {
            addCriterion("entrance_flow_ave is null");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveIsNotNull() {
            addCriterion("entrance_flow_ave is not null");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveEqualTo(Double value) {
            addCriterion("entrance_flow_ave =", value, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveNotEqualTo(Double value) {
            addCriterion("entrance_flow_ave <>", value, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveGreaterThan(Double value) {
            addCriterion("entrance_flow_ave >", value, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveGreaterThanOrEqualTo(Double value) {
            addCriterion("entrance_flow_ave >=", value, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveLessThan(Double value) {
            addCriterion("entrance_flow_ave <", value, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveLessThanOrEqualTo(Double value) {
            addCriterion("entrance_flow_ave <=", value, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveIn(List<Double> values) {
            addCriterion("entrance_flow_ave in", values, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveNotIn(List<Double> values) {
            addCriterion("entrance_flow_ave not in", values, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveBetween(Double value1, Double value2) {
            addCriterion("entrance_flow_ave between", value1, value2, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andEntranceFlowAveNotBetween(Double value1, Double value2) {
            addCriterion("entrance_flow_ave not between", value1, value2, "entranceFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveIsNull() {
            addCriterion("outbound_flow_ave is null");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveIsNotNull() {
            addCriterion("outbound_flow_ave is not null");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveEqualTo(Double value) {
            addCriterion("outbound_flow_ave =", value, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveNotEqualTo(Double value) {
            addCriterion("outbound_flow_ave <>", value, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveGreaterThan(Double value) {
            addCriterion("outbound_flow_ave >", value, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveGreaterThanOrEqualTo(Double value) {
            addCriterion("outbound_flow_ave >=", value, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveLessThan(Double value) {
            addCriterion("outbound_flow_ave <", value, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveLessThanOrEqualTo(Double value) {
            addCriterion("outbound_flow_ave <=", value, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveIn(List<Double> values) {
            addCriterion("outbound_flow_ave in", values, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveNotIn(List<Double> values) {
            addCriterion("outbound_flow_ave not in", values, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveBetween(Double value1, Double value2) {
            addCriterion("outbound_flow_ave between", value1, value2, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andOutboundFlowAveNotBetween(Double value1, Double value2) {
            addCriterion("outbound_flow_ave not between", value1, value2, "outboundFlowAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveIsNull() {
            addCriterion("turnover_ave is null");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveIsNotNull() {
            addCriterion("turnover_ave is not null");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveEqualTo(Double value) {
            addCriterion("turnover_ave =", value, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveNotEqualTo(Double value) {
            addCriterion("turnover_ave <>", value, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveGreaterThan(Double value) {
            addCriterion("turnover_ave >", value, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveGreaterThanOrEqualTo(Double value) {
            addCriterion("turnover_ave >=", value, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveLessThan(Double value) {
            addCriterion("turnover_ave <", value, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveLessThanOrEqualTo(Double value) {
            addCriterion("turnover_ave <=", value, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveIn(List<Double> values) {
            addCriterion("turnover_ave in", values, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveNotIn(List<Double> values) {
            addCriterion("turnover_ave not in", values, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveBetween(Double value1, Double value2) {
            addCriterion("turnover_ave between", value1, value2, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andTurnoverAveNotBetween(Double value1, Double value2) {
            addCriterion("turnover_ave not between", value1, value2, "turnoverAve");
            return (Criteria) this;
        }

        public Criteria andUsageRateIsNull() {
            addCriterion("usage_rate is null");
            return (Criteria) this;
        }

        public Criteria andUsageRateIsNotNull() {
            addCriterion("usage_rate is not null");
            return (Criteria) this;
        }

        public Criteria andUsageRateEqualTo(Double value) {
            addCriterion("usage_rate =", value, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateNotEqualTo(Double value) {
            addCriterion("usage_rate <>", value, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateGreaterThan(Double value) {
            addCriterion("usage_rate >", value, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateGreaterThanOrEqualTo(Double value) {
            addCriterion("usage_rate >=", value, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateLessThan(Double value) {
            addCriterion("usage_rate <", value, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateLessThanOrEqualTo(Double value) {
            addCriterion("usage_rate <=", value, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateIn(List<Double> values) {
            addCriterion("usage_rate in", values, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateNotIn(List<Double> values) {
            addCriterion("usage_rate not in", values, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateBetween(Double value1, Double value2) {
            addCriterion("usage_rate between", value1, value2, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUsageRateNotBetween(Double value1, Double value2) {
            addCriterion("usage_rate not between", value1, value2, "usageRate");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(String value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(String value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(String value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(String value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(String value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(String value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLike(String value) {
            addCriterion("update_time like", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotLike(String value) {
            addCriterion("update_time not like", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<String> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<String> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(String value1, String value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(String value1, String value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_park_statistics_day
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}