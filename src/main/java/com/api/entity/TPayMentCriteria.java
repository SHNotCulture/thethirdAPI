package com.api.entity;

import java.util.ArrayList;
import java.util.List;

public class TPayMentCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public TPayMentCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andParkIdIsNull() {
            addCriterion("park_id is null");
            return (Criteria) this;
        }

        public Criteria andParkIdIsNotNull() {
            addCriterion("park_id is not null");
            return (Criteria) this;
        }

        public Criteria andParkIdEqualTo(Integer value) {
            addCriterion("park_id =", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotEqualTo(Integer value) {
            addCriterion("park_id <>", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdGreaterThan(Integer value) {
            addCriterion("park_id >", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("park_id >=", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdLessThan(Integer value) {
            addCriterion("park_id <", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdLessThanOrEqualTo(Integer value) {
            addCriterion("park_id <=", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdIn(List<Integer> values) {
            addCriterion("park_id in", values, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotIn(List<Integer> values) {
            addCriterion("park_id not in", values, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdBetween(Integer value1, Integer value2) {
            addCriterion("park_id between", value1, value2, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotBetween(Integer value1, Integer value2) {
            addCriterion("park_id not between", value1, value2, "parkId");
            return (Criteria) this;
        }

        public Criteria andPayTypeIsNull() {
            addCriterion("pay_type is null");
            return (Criteria) this;
        }

        public Criteria andPayTypeIsNotNull() {
            addCriterion("pay_type is not null");
            return (Criteria) this;
        }

        public Criteria andPayTypeEqualTo(Integer value) {
            addCriterion("pay_type =", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotEqualTo(Integer value) {
            addCriterion("pay_type <>", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThan(Integer value) {
            addCriterion("pay_type >", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("pay_type >=", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThan(Integer value) {
            addCriterion("pay_type <", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThanOrEqualTo(Integer value) {
            addCriterion("pay_type <=", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeIn(List<Integer> values) {
            addCriterion("pay_type in", values, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotIn(List<Integer> values) {
            addCriterion("pay_type not in", values, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeBetween(Integer value1, Integer value2) {
            addCriterion("pay_type between", value1, value2, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("pay_type not between", value1, value2, "payType");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpIsNull() {
            addCriterion("is_start_hump is null");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpIsNotNull() {
            addCriterion("is_start_hump is not null");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpEqualTo(Integer value) {
            addCriterion("is_start_hump =", value, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpNotEqualTo(Integer value) {
            addCriterion("is_start_hump <>", value, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpGreaterThan(Integer value) {
            addCriterion("is_start_hump >", value, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_start_hump >=", value, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpLessThan(Integer value) {
            addCriterion("is_start_hump <", value, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpLessThanOrEqualTo(Integer value) {
            addCriterion("is_start_hump <=", value, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpIn(List<Integer> values) {
            addCriterion("is_start_hump in", values, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpNotIn(List<Integer> values) {
            addCriterion("is_start_hump not in", values, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpBetween(Integer value1, Integer value2) {
            addCriterion("is_start_hump between", value1, value2, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsStartHumpNotBetween(Integer value1, Integer value2) {
            addCriterion("is_start_hump not between", value1, value2, "isStartHump");
            return (Criteria) this;
        }

        public Criteria andIsHolidayIsNull() {
            addCriterion("is_holiday is null");
            return (Criteria) this;
        }

        public Criteria andIsHolidayIsNotNull() {
            addCriterion("is_holiday is not null");
            return (Criteria) this;
        }

        public Criteria andIsHolidayEqualTo(Integer value) {
            addCriterion("is_holiday =", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayNotEqualTo(Integer value) {
            addCriterion("is_holiday <>", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayGreaterThan(Integer value) {
            addCriterion("is_holiday >", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_holiday >=", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayLessThan(Integer value) {
            addCriterion("is_holiday <", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayLessThanOrEqualTo(Integer value) {
            addCriterion("is_holiday <=", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayIn(List<Integer> values) {
            addCriterion("is_holiday in", values, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayNotIn(List<Integer> values) {
            addCriterion("is_holiday not in", values, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayBetween(Integer value1, Integer value2) {
            addCriterion("is_holiday between", value1, value2, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayNotBetween(Integer value1, Integer value2) {
            addCriterion("is_holiday not between", value1, value2, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakIsNull() {
            addCriterion("is_low_peak is null");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakIsNotNull() {
            addCriterion("is_low_peak is not null");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakEqualTo(Integer value) {
            addCriterion("is_low_peak =", value, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakNotEqualTo(Integer value) {
            addCriterion("is_low_peak <>", value, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakGreaterThan(Integer value) {
            addCriterion("is_low_peak >", value, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_low_peak >=", value, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakLessThan(Integer value) {
            addCriterion("is_low_peak <", value, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakLessThanOrEqualTo(Integer value) {
            addCriterion("is_low_peak <=", value, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakIn(List<Integer> values) {
            addCriterion("is_low_peak in", values, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakNotIn(List<Integer> values) {
            addCriterion("is_low_peak not in", values, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakBetween(Integer value1, Integer value2) {
            addCriterion("is_low_peak between", value1, value2, "isLowPeak");
            return (Criteria) this;
        }

        public Criteria andIsLowPeakNotBetween(Integer value1, Integer value2) {
            addCriterion("is_low_peak not between", value1, value2, "isLowPeak");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_pay_ment
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_pay_ment
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}